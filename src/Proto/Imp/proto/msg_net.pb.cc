// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/msg_net.proto

#include "proto/msg_net.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace protocol {
class StringNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringNet>
      _instance;
} _StringNet_default_instance_;
class Uint32NetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint32Net>
      _instance;
} _Uint32Net_default_instance_;
class Uint32ListNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint32ListNet>
      _instance;
} _Uint32ListNet_default_instance_;
class Uint64NetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint64Net>
      _instance;
} _Uint64Net_default_instance_;
class DoubleInt32NetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleInt32Net>
      _instance;
} _DoubleInt32Net_default_instance_;
class DoubleUint64NetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleUint64Net>
      _instance;
} _DoubleUint64Net_default_instance_;
class ServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo>
      _instance;
} _ServerInfo_default_instance_;
class MapPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapPos>
      _instance;
} _MapPos_default_instance_;
class PlayerBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerBaseInfo>
      _instance;
} _PlayerBaseInfo_default_instance_;
class RoleBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleBaseInfo>
      _instance;
} _RoleBaseInfo_default_instance_;
class ItemBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemBaseInfo>
      _instance;
} _ItemBaseInfo_default_instance_;
class ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo>
      _instance;
} _ItemInfo_default_instance_;
class ItemChangeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemChangeInfo>
      _instance;
} _ItemChangeInfo_default_instance_;
class ItemBagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemBag>
      _instance;
} _ItemBag_default_instance_;
class EquipBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipBaseInfo>
      _instance;
} _EquipBaseInfo_default_instance_;
class EquipInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipInfo>
      _instance;
} _EquipInfo_default_instance_;
class EquipChangeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipChangeInfo>
      _instance;
} _EquipChangeInfo_default_instance_;
class EquipBagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipBag>
      _instance;
} _EquipBag_default_instance_;
class RoleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleInfo>
      _instance;
} _RoleInfo_default_instance_;
class LoginReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReqNet>
      _instance;
} _LoginReqNet_default_instance_;
class LoginRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRspNet>
      _instance;
} _LoginRspNet_default_instance_;
class SelectGameServerReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectGameServerReqNet>
      _instance;
} _SelectGameServerReqNet_default_instance_;
class SelectGameServerRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SelectGameServerRspNet>
      _instance;
} _SelectGameServerRspNet_default_instance_;
class LoginGameReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginGameReqNet>
      _instance;
} _LoginGameReqNet_default_instance_;
class LoginGameRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginGameRspNet>
      _instance;
} _LoginGameRspNet_default_instance_;
class CreateRoleReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleReqNet>
      _instance;
} _CreateRoleReqNet_default_instance_;
class CreateRoleRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleRspNet>
      _instance;
} _CreateRoleRspNet_default_instance_;
class EnterSceneReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneReqNet>
      _instance;
} _EnterSceneReqNet_default_instance_;
class EnterSceneRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneRspNet>
      _instance;
} _EnterSceneRspNet_default_instance_;
class BagNotifyNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BagNotifyNet>
      _instance;
} _BagNotifyNet_default_instance_;
class EquipBagNotifyNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipBagNotifyNet>
      _instance;
} _EquipBagNotifyNet_default_instance_;
class ErrorNotifyNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorNotifyNet>
      _instance;
} _ErrorNotifyNet_default_instance_;
class UpdLoginReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdLoginReqNet>
      _instance;
} _UpdLoginReqNet_default_instance_;
class UpdLoginRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdLoginRspNet>
      _instance;
} _UpdLoginRspNet_default_instance_;
class UpdTestReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdTestReqNet>
      _instance;
} _UpdTestReqNet_default_instance_;
class UpdTestRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdTestRspNet>
      _instance;
} _UpdTestRspNet_default_instance_;
class BuyRoleSoltReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuyRoleSoltReqNet>
      _instance;
} _BuyRoleSoltReqNet_default_instance_;
class BuyRoleSoltRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuyRoleSoltRspNet>
      _instance;
} _BuyRoleSoltRspNet_default_instance_;
class GMCMDReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMCMDReqNet>
      _instance;
} _GMCMDReqNet_default_instance_;
class GMCMDRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMCMDRspNet>
      _instance;
} _GMCMDRspNet_default_instance_;
class ItemChangeNotifyNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemChangeNotifyNet>
      _instance;
} _ItemChangeNotifyNet_default_instance_;
class EquipChangeNotifyNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquipChangeNotifyNet>
      _instance;
} _EquipChangeNotifyNet_default_instance_;
class BuyBagSoltReqNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuyBagSoltReqNet>
      _instance;
} _BuyBagSoltReqNet_default_instance_;
class BuyBagSoltRspNetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuyBagSoltRspNet>
      _instance;
} _BuyBagSoltRspNet_default_instance_;
}  // namespace protocol
namespace protobuf_proto_2fmsg_5fnet_2eproto {
void InitDefaultsStringNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_StringNet_default_instance_;
    new (ptr) ::protocol::StringNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StringNet::InitAsDefaultInstance();
}

void InitDefaultsStringNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringNetImpl);
}

void InitDefaultsUint32NetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_Uint32Net_default_instance_;
    new (ptr) ::protocol::Uint32Net();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Uint32Net::InitAsDefaultInstance();
}

void InitDefaultsUint32Net() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUint32NetImpl);
}

void InitDefaultsUint32ListNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_Uint32ListNet_default_instance_;
    new (ptr) ::protocol::Uint32ListNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Uint32ListNet::InitAsDefaultInstance();
}

void InitDefaultsUint32ListNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUint32ListNetImpl);
}

void InitDefaultsUint64NetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_Uint64Net_default_instance_;
    new (ptr) ::protocol::Uint64Net();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::Uint64Net::InitAsDefaultInstance();
}

void InitDefaultsUint64Net() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUint64NetImpl);
}

void InitDefaultsDoubleInt32NetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_DoubleInt32Net_default_instance_;
    new (ptr) ::protocol::DoubleInt32Net();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::DoubleInt32Net::InitAsDefaultInstance();
}

void InitDefaultsDoubleInt32Net() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDoubleInt32NetImpl);
}

void InitDefaultsDoubleUint64NetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_DoubleUint64Net_default_instance_;
    new (ptr) ::protocol::DoubleUint64Net();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::DoubleUint64Net::InitAsDefaultInstance();
}

void InitDefaultsDoubleUint64Net() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDoubleUint64NetImpl);
}

void InitDefaultsServerInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_ServerInfo_default_instance_;
    new (ptr) ::protocol::ServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ServerInfo::InitAsDefaultInstance();
}

void InitDefaultsServerInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerInfoImpl);
}

void InitDefaultsMapPosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_MapPos_default_instance_;
    new (ptr) ::protocol::MapPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::MapPos::InitAsDefaultInstance();
}

void InitDefaultsMapPos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMapPosImpl);
}

void InitDefaultsPlayerBaseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_PlayerBaseInfo_default_instance_;
    new (ptr) ::protocol::PlayerBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::PlayerBaseInfo::InitAsDefaultInstance();
}

void InitDefaultsPlayerBaseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerBaseInfoImpl);
}

void InitDefaultsRoleBaseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipInfo();
  {
    void* ptr = &::protocol::_RoleBaseInfo_default_instance_;
    new (ptr) ::protocol::RoleBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::RoleBaseInfo::InitAsDefaultInstance();
}

void InitDefaultsRoleBaseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleBaseInfoImpl);
}

void InitDefaultsItemBaseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_ItemBaseInfo_default_instance_;
    new (ptr) ::protocol::ItemBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ItemBaseInfo::InitAsDefaultInstance();
}

void InitDefaultsItemBaseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemBaseInfoImpl);
}

void InitDefaultsItemInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBaseInfo();
  {
    void* ptr = &::protocol::_ItemInfo_default_instance_;
    new (ptr) ::protocol::ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ItemInfo::InitAsDefaultInstance();
}

void InitDefaultsItemInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemInfoImpl);
}

void InitDefaultsItemChangeInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemInfo();
  {
    void* ptr = &::protocol::_ItemChangeInfo_default_instance_;
    new (ptr) ::protocol::ItemChangeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ItemChangeInfo::InitAsDefaultInstance();
}

void InitDefaultsItemChangeInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemChangeInfoImpl);
}

void InitDefaultsItemBagImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemInfo();
  {
    void* ptr = &::protocol::_ItemBag_default_instance_;
    new (ptr) ::protocol::ItemBag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ItemBag::InitAsDefaultInstance();
}

void InitDefaultsItemBag() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemBagImpl);
}

void InitDefaultsEquipBaseInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_EquipBaseInfo_default_instance_;
    new (ptr) ::protocol::EquipBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipBaseInfo::InitAsDefaultInstance();
}

void InitDefaultsEquipBaseInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipBaseInfoImpl);
}

void InitDefaultsEquipInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBaseInfo();
  {
    void* ptr = &::protocol::_EquipInfo_default_instance_;
    new (ptr) ::protocol::EquipInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipInfo::InitAsDefaultInstance();
}

void InitDefaultsEquipInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipInfoImpl);
}

void InitDefaultsEquipChangeInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipInfo();
  {
    void* ptr = &::protocol::_EquipChangeInfo_default_instance_;
    new (ptr) ::protocol::EquipChangeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipChangeInfo::InitAsDefaultInstance();
}

void InitDefaultsEquipChangeInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipChangeInfoImpl);
}

void InitDefaultsEquipBagImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipInfo();
  {
    void* ptr = &::protocol::_EquipBag_default_instance_;
    new (ptr) ::protocol::EquipBag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipBag::InitAsDefaultInstance();
}

void InitDefaultsEquipBag() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipBagImpl);
}

void InitDefaultsRoleInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleBaseInfo();
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsMapPos();
  {
    void* ptr = &::protocol::_RoleInfo_default_instance_;
    new (ptr) ::protocol::RoleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::RoleInfo::InitAsDefaultInstance();
}

void InitDefaultsRoleInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoleInfoImpl);
}

void InitDefaultsLoginReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_LoginReqNet_default_instance_;
    new (ptr) ::protocol::LoginReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::LoginReqNet::InitAsDefaultInstance();
}

void InitDefaultsLoginReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginReqNetImpl);
}

void InitDefaultsLoginRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_LoginRspNet_default_instance_;
    new (ptr) ::protocol::LoginRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::LoginRspNet::InitAsDefaultInstance();
}

void InitDefaultsLoginRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRspNetImpl);
}

void InitDefaultsSelectGameServerReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_SelectGameServerReqNet_default_instance_;
    new (ptr) ::protocol::SelectGameServerReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SelectGameServerReqNet::InitAsDefaultInstance();
}

void InitDefaultsSelectGameServerReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectGameServerReqNetImpl);
}

void InitDefaultsSelectGameServerRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsServerInfo();
  {
    void* ptr = &::protocol::_SelectGameServerRspNet_default_instance_;
    new (ptr) ::protocol::SelectGameServerRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::SelectGameServerRspNet::InitAsDefaultInstance();
}

void InitDefaultsSelectGameServerRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSelectGameServerRspNetImpl);
}

void InitDefaultsLoginGameReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_LoginGameReqNet_default_instance_;
    new (ptr) ::protocol::LoginGameReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::LoginGameReqNet::InitAsDefaultInstance();
}

void InitDefaultsLoginGameReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginGameReqNetImpl);
}

void InitDefaultsLoginGameRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsPlayerBaseInfo();
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleBaseInfo();
  {
    void* ptr = &::protocol::_LoginGameRspNet_default_instance_;
    new (ptr) ::protocol::LoginGameRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::LoginGameRspNet::InitAsDefaultInstance();
}

void InitDefaultsLoginGameRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginGameRspNetImpl);
}

void InitDefaultsCreateRoleReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_CreateRoleReqNet_default_instance_;
    new (ptr) ::protocol::CreateRoleReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::CreateRoleReqNet::InitAsDefaultInstance();
}

void InitDefaultsCreateRoleReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoleReqNetImpl);
}

void InitDefaultsCreateRoleRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleBaseInfo();
  {
    void* ptr = &::protocol::_CreateRoleRspNet_default_instance_;
    new (ptr) ::protocol::CreateRoleRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::CreateRoleRspNet::InitAsDefaultInstance();
}

void InitDefaultsCreateRoleRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoleRspNetImpl);
}

void InitDefaultsEnterSceneReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_EnterSceneReqNet_default_instance_;
    new (ptr) ::protocol::EnterSceneReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EnterSceneReqNet::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneReqNetImpl);
}

void InitDefaultsEnterSceneRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleInfo();
  {
    void* ptr = &::protocol::_EnterSceneRspNet_default_instance_;
    new (ptr) ::protocol::EnterSceneRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EnterSceneRspNet::InitAsDefaultInstance();
}

void InitDefaultsEnterSceneRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterSceneRspNetImpl);
}

void InitDefaultsBagNotifyNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBag();
  {
    void* ptr = &::protocol::_BagNotifyNet_default_instance_;
    new (ptr) ::protocol::BagNotifyNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::BagNotifyNet::InitAsDefaultInstance();
}

void InitDefaultsBagNotifyNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBagNotifyNetImpl);
}

void InitDefaultsEquipBagNotifyNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBag();
  {
    void* ptr = &::protocol::_EquipBagNotifyNet_default_instance_;
    new (ptr) ::protocol::EquipBagNotifyNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipBagNotifyNet::InitAsDefaultInstance();
}

void InitDefaultsEquipBagNotifyNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipBagNotifyNetImpl);
}

void InitDefaultsErrorNotifyNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_ErrorNotifyNet_default_instance_;
    new (ptr) ::protocol::ErrorNotifyNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ErrorNotifyNet::InitAsDefaultInstance();
}

void InitDefaultsErrorNotifyNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorNotifyNetImpl);
}

void InitDefaultsUpdLoginReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_UpdLoginReqNet_default_instance_;
    new (ptr) ::protocol::UpdLoginReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdLoginReqNet::InitAsDefaultInstance();
}

void InitDefaultsUpdLoginReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdLoginReqNetImpl);
}

void InitDefaultsUpdLoginRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_UpdLoginRspNet_default_instance_;
    new (ptr) ::protocol::UpdLoginRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdLoginRspNet::InitAsDefaultInstance();
}

void InitDefaultsUpdLoginRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdLoginRspNetImpl);
}

void InitDefaultsUpdTestReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_UpdTestReqNet_default_instance_;
    new (ptr) ::protocol::UpdTestReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdTestReqNet::InitAsDefaultInstance();
}

void InitDefaultsUpdTestReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdTestReqNetImpl);
}

void InitDefaultsUpdTestRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_UpdTestRspNet_default_instance_;
    new (ptr) ::protocol::UpdTestRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::UpdTestRspNet::InitAsDefaultInstance();
}

void InitDefaultsUpdTestRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdTestRspNetImpl);
}

void InitDefaultsBuyRoleSoltReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_BuyRoleSoltReqNet_default_instance_;
    new (ptr) ::protocol::BuyRoleSoltReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::BuyRoleSoltReqNet::InitAsDefaultInstance();
}

void InitDefaultsBuyRoleSoltReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBuyRoleSoltReqNetImpl);
}

void InitDefaultsBuyRoleSoltRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_BuyRoleSoltRspNet_default_instance_;
    new (ptr) ::protocol::BuyRoleSoltRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::BuyRoleSoltRspNet::InitAsDefaultInstance();
}

void InitDefaultsBuyRoleSoltRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBuyRoleSoltRspNetImpl);
}

void InitDefaultsGMCMDReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_GMCMDReqNet_default_instance_;
    new (ptr) ::protocol::GMCMDReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GMCMDReqNet::InitAsDefaultInstance();
}

void InitDefaultsGMCMDReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMCMDReqNetImpl);
}

void InitDefaultsGMCMDRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_GMCMDRspNet_default_instance_;
    new (ptr) ::protocol::GMCMDRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::GMCMDRspNet::InitAsDefaultInstance();
}

void InitDefaultsGMCMDRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMCMDRspNetImpl);
}

void InitDefaultsItemChangeNotifyNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemChangeInfo();
  {
    void* ptr = &::protocol::_ItemChangeNotifyNet_default_instance_;
    new (ptr) ::protocol::ItemChangeNotifyNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ItemChangeNotifyNet::InitAsDefaultInstance();
}

void InitDefaultsItemChangeNotifyNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemChangeNotifyNetImpl);
}

void InitDefaultsEquipChangeNotifyNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipChangeInfo();
  {
    void* ptr = &::protocol::_EquipChangeNotifyNet_default_instance_;
    new (ptr) ::protocol::EquipChangeNotifyNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::EquipChangeNotifyNet::InitAsDefaultInstance();
}

void InitDefaultsEquipChangeNotifyNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquipChangeNotifyNetImpl);
}

void InitDefaultsBuyBagSoltReqNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_BuyBagSoltReqNet_default_instance_;
    new (ptr) ::protocol::BuyBagSoltReqNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::BuyBagSoltReqNet::InitAsDefaultInstance();
}

void InitDefaultsBuyBagSoltReqNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBuyBagSoltReqNetImpl);
}

void InitDefaultsBuyBagSoltRspNetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protocol::_BuyBagSoltRspNet_default_instance_;
    new (ptr) ::protocol::BuyBagSoltRspNet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::BuyBagSoltRspNet::InitAsDefaultInstance();
}

void InitDefaultsBuyBagSoltRspNet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBuyBagSoltRspNetImpl);
}

::google::protobuf::Metadata file_level_metadata[44];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StringNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StringNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StringNet, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32Net, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32Net, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32ListNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32ListNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint32ListNet, valuelist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint64Net, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint64Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::Uint64Net, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleInt32Net, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleInt32Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleInt32Net, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleInt32Net, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleUint64Net, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleUint64Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleUint64Net, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::DoubleUint64Net, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerInfo, serverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerInfo, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerInfo, serverid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::MapPos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::MapPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::MapPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::MapPos, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::MapPos, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::PlayerBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::PlayerBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::PlayerBaseInfo, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::PlayerBaseInfo, diamond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::PlayerBaseInfo, viplevel_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, jobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, equips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleBaseInfo, maincityid_),
  2,
  3,
  4,
  0,
  5,
  1,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBaseInfo, uid_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemInfo, baseinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeInfo, change_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, infos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, consumptionsbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, materialsbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemBag, questsbag_),
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBaseInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBaseInfo, uid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipInfo, baseinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeInfo, change_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBag, infos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBag, bag_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, skillpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::RoleInfo, energy_),
  0,
  2,
  3,
  1,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, channelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, sdktoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, sdksession_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, logintype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, runtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginReqNet, deviceid_),
  0,
  1,
  2,
  3,
  5,
  6,
  7,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginRspNet, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginRspNet, ret_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerReqNet, gameserverid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, udpserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, gametoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::SelectGameServerRspNet, ret_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameReqNet, gametoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameReqNet, account_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::LoginGameRspNet, soltcount_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleReqNet, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleReqNet, jobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleReqNet, sex_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleRspNet, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::CreateRoleRspNet, role_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneReqNet, roleid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneRspNet, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EnterSceneRspNet, roleinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BagNotifyNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BagNotifyNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BagNotifyNet, bag_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBagNotifyNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBagNotifyNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipBagNotifyNet, bag_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ErrorNotifyNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ErrorNotifyNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ErrorNotifyNet, err_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginReqNet, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginReqNet, playerid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginRspNet, kcpid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdLoginRspNet, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestReqNet, dataid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::UpdTestRspNet, dataid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltRspNet, soltcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyRoleSoltRspNet, ret_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDReqNet, cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::GMCMDRspNet, ret_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeNotifyNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeNotifyNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ItemChangeNotifyNet, infos_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeNotifyNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeNotifyNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::EquipChangeNotifyNet, infos_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltReqNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltReqNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, consumptionsbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, materialsbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, questsbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::BuyBagSoltRspNet, equipsbag_),
  0,
  1,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::protocol::StringNet)},
  { 7, 13, sizeof(::protocol::Uint32Net)},
  { 14, 20, sizeof(::protocol::Uint32ListNet)},
  { 21, 27, sizeof(::protocol::Uint64Net)},
  { 28, 35, sizeof(::protocol::DoubleInt32Net)},
  { 37, 44, sizeof(::protocol::DoubleUint64Net)},
  { 46, 54, sizeof(::protocol::ServerInfo)},
  { 57, 65, sizeof(::protocol::MapPos)},
  { 68, 76, sizeof(::protocol::PlayerBaseInfo)},
  { 79, 91, sizeof(::protocol::RoleBaseInfo)},
  { 98, 107, sizeof(::protocol::ItemBaseInfo)},
  { 111, 117, sizeof(::protocol::ItemInfo)},
  { 118, 125, sizeof(::protocol::ItemChangeInfo)},
  { 127, 136, sizeof(::protocol::ItemBag)},
  { 140, 147, sizeof(::protocol::EquipBaseInfo)},
  { 149, 155, sizeof(::protocol::EquipInfo)},
  { 156, 163, sizeof(::protocol::EquipChangeInfo)},
  { 165, 172, sizeof(::protocol::EquipBag)},
  { 174, 185, sizeof(::protocol::RoleInfo)},
  { 191, 204, sizeof(::protocol::LoginReqNet)},
  { 212, 219, sizeof(::protocol::LoginRspNet)},
  { 221, 227, sizeof(::protocol::SelectGameServerReqNet)},
  { 228, 237, sizeof(::protocol::SelectGameServerRspNet)},
  { 241, 248, sizeof(::protocol::LoginGameReqNet)},
  { 250, 259, sizeof(::protocol::LoginGameRspNet)},
  { 263, 271, sizeof(::protocol::CreateRoleReqNet)},
  { 274, 281, sizeof(::protocol::CreateRoleRspNet)},
  { 283, 289, sizeof(::protocol::EnterSceneReqNet)},
  { 290, 297, sizeof(::protocol::EnterSceneRspNet)},
  { 299, 305, sizeof(::protocol::BagNotifyNet)},
  { 306, 312, sizeof(::protocol::EquipBagNotifyNet)},
  { 313, 319, sizeof(::protocol::ErrorNotifyNet)},
  { 320, 327, sizeof(::protocol::UpdLoginReqNet)},
  { 329, 336, sizeof(::protocol::UpdLoginRspNet)},
  { 338, 344, sizeof(::protocol::UpdTestReqNet)},
  { 345, 351, sizeof(::protocol::UpdTestRspNet)},
  { 352, 357, sizeof(::protocol::BuyRoleSoltReqNet)},
  { 357, 364, sizeof(::protocol::BuyRoleSoltRspNet)},
  { 366, 372, sizeof(::protocol::GMCMDReqNet)},
  { 373, 379, sizeof(::protocol::GMCMDRspNet)},
  { 380, 386, sizeof(::protocol::ItemChangeNotifyNet)},
  { 387, 393, sizeof(::protocol::EquipChangeNotifyNet)},
  { 394, 399, sizeof(::protocol::BuyBagSoltReqNet)},
  { 399, 409, sizeof(::protocol::BuyBagSoltRspNet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StringNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Uint32Net_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Uint32ListNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_Uint64Net_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_DoubleInt32Net_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_DoubleUint64Net_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_MapPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_PlayerBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_RoleBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ItemBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ItemChangeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ItemBag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipChangeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipBag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_RoleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_LoginReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_LoginRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_SelectGameServerReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_SelectGameServerRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_LoginGameReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_LoginGameRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_CreateRoleReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_CreateRoleRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EnterSceneReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EnterSceneRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_BagNotifyNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipBagNotifyNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ErrorNotifyNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_UpdLoginReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_UpdLoginRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_UpdTestReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_UpdTestRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_BuyRoleSoltReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_BuyRoleSoltRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GMCMDReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_GMCMDRspNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ItemChangeNotifyNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_EquipChangeNotifyNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_BuyBagSoltReqNet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_BuyBagSoltRspNet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "proto/msg_net.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 44);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023proto/msg_net.proto\022\010protocol\"\032\n\tStrin"
      "gNet\022\r\n\005value\030\001 \002(\t\"\032\n\tUint32Net\022\r\n\005valu"
      "e\030\001 \002(\r\"\"\n\rUint32ListNet\022\021\n\tvalueList\030\001 "
      "\003(\r\"\032\n\tUint64Net\022\r\n\005value\030\001 \002(\004\",\n\016Doubl"
      "eInt32Net\022\013\n\003key\030\001 \002(\005\022\r\n\005value\030\002 \002(\005\"-\n"
      "\017DoubleUint64Net\022\013\n\003key\030\001 \002(\004\022\r\n\005value\030\002"
      " \002(\004\"D\n\nServerInfo\022\020\n\010serverIp\030\001 \002(\t\022\022\n\n"
      "serverPort\030\002 \002(\005\022\020\n\010serverId\030\003 \001(\005\")\n\006Ma"
      "pPos\022\t\n\001x\030\001 \002(\003\022\t\n\001y\030\002 \002(\003\022\t\n\001z\030\003 \002(\003\"E\n"
      "\016PlayerBaseInfo\022\020\n\010playerId\030\001 \002(\003\022\017\n\007dia"
      "mond\030\002 \002(\005\022\020\n\010vipLevel\030\003 \002(\005\"\220\001\n\014RoleBas"
      "eInfo\022\016\n\006roleId\030\001 \002(\003\022\r\n\005jobId\030\002 \002(\005\022\013\n\003"
      "sex\030\003 \002(\005\022\014\n\004name\030\004 \002(\t\022\r\n\005level\030\005 \002(\005\022#"
      "\n\006equips\030\006 \001(\0132\023.protocol.EquipInfo\022\022\n\nm"
      "ainCityId\030\007 \002(\005\"H\n\014ItemBaseInfo\022\020\n\010itemT"
      "ype\030\001 \002(\005\022\n\n\002id\030\002 \002(\003\022\r\n\005count\030\003 \002(\003\022\013\n\003"
      "uid\030\004 \002(\003\"4\n\010ItemInfo\022(\n\010baseInfo\030\001 \002(\0132"
      "\026.protocol.ItemBaseInfo\"B\n\016ItemChangeInf"
      "o\022 \n\004info\030\001 \002(\0132\022.protocol.ItemInfo\022\016\n\006c"
      "hange\030\002 \002(\005\"n\n\007ItemBag\022!\n\005infos\030\001 \003(\0132\022."
      "protocol.ItemInfo\022\027\n\017consumptionsBag\030\002 \002"
      "(\005\022\024\n\014materialsBag\030\003 \002(\005\022\021\n\tquestsBag\030\004 "
      "\002(\005\"(\n\rEquipBaseInfo\022\n\n\002id\030\001 \002(\003\022\013\n\003uid\030"
      "\002 \002(\003\"6\n\tEquipInfo\022)\n\010baseInfo\030\001 \002(\0132\027.p"
      "rotocol.EquipBaseInfo\"D\n\017EquipChangeInfo"
      "\022!\n\004info\030\001 \002(\0132\023.protocol.EquipInfo\022\016\n\006c"
      "hange\030\002 \002(\005\";\n\010EquipBag\022\"\n\005infos\030\001 \003(\0132\023"
      ".protocol.EquipInfo\022\013\n\003bag\030\002 \002(\005\"\223\001\n\010Rol"
      "eInfo\022(\n\010baseInfo\030\001 \002(\0132\026.protocol.RoleB"
      "aseInfo\022\r\n\005money\030\002 \002(\003\022\013\n\003exp\030\003 \002(\003\022\035\n\003p"
      "os\030\005 \002(\0132\020.protocol.MapPos\022\022\n\nskillPoint"
      "\030\006 \001(\005\022\016\n\006energy\030\007 \001(\005\"\232\001\n\013LoginReqNet\022\021"
      "\n\tchannelId\030\001 \001(\t\022\013\n\003uid\030\002 \002(\t\022\020\n\010sdkTok"
      "en\030\003 \001(\t\022\022\n\nsdkSession\030\004 \001(\t\022\021\n\tloginTyp"
      "e\030\005 \002(\005\022\017\n\007version\030\006 \001(\005\022\017\n\007runtime\030\007 \001("
      "\005\022\020\n\010deviceId\030\010 \001(\t\"+\n\013LoginRspNet\022\017\n\007ac"
      "count\030\001 \002(\t\022\013\n\003ret\030\002 \002(\005\".\n\026SelectGameSe"
      "rverReqNet\022\024\n\014gameServerId\030\001 \002(\005\"\207\001\n\026Sel"
      "ectGameServerRspNet\022$\n\006server\030\001 \002(\0132\024.pr"
      "otocol.ServerInfo\022\'\n\tudpserver\030\002 \001(\0132\024.p"
      "rotocol.ServerInfo\022\021\n\tgameToken\030\003 \002(\t\022\013\n"
      "\003ret\030\004 \002(\005\"5\n\017LoginGameReqNet\022\021\n\tgameTok"
      "en\030\001 \002(\t\022\017\n\007account\030\002 \002(\t\"\202\001\n\017LoginGameR"
      "spNet\022\013\n\003ret\030\001 \002(\005\022(\n\006player\030\002 \001(\0132\030.pro"
      "tocol.PlayerBaseInfo\022%\n\005roles\030\003 \003(\0132\026.pr"
      "otocol.RoleBaseInfo\022\021\n\tsoltCount\030\004 \002(\005\"<"
      "\n\020CreateRoleReqNet\022\014\n\004name\030\001 \002(\t\022\r\n\005jobI"
      "d\030\002 \002(\005\022\013\n\003sex\030\003 \002(\005\"E\n\020CreateRoleRspNet"
      "\022\013\n\003ret\030\001 \002(\005\022$\n\004role\030\002 \002(\0132\026.protocol.R"
      "oleBaseInfo\"\"\n\020EnterSceneReqNet\022\016\n\006roleI"
      "d\030\001 \002(\003\"E\n\020EnterSceneRspNet\022\013\n\003ret\030\001 \002(\005"
      "\022$\n\010roleInfo\030\002 \001(\0132\022.protocol.RoleInfo\"."
      "\n\014BagNotifyNet\022\036\n\003bag\030\001 \002(\0132\021.protocol.I"
      "temBag\"4\n\021EquipBagNotifyNet\022\037\n\003bag\030\001 \002(\013"
      "2\022.protocol.EquipBag\"\035\n\016ErrorNotifyNet\022\013"
      "\n\003err\030\001 \002(\005\".\n\016UpdLoginReqNet\022\n\n\002id\030\001 \002("
      "\005\022\020\n\010playerId\030\002 \002(\003\"+\n\016UpdLoginRspNet\022\r\n"
      "\005kcpId\030\001 \002(\005\022\n\n\002id\030\002 \002(\005\"\037\n\rUpdTestReqNe"
      "t\022\016\n\006dataId\030\001 \002(\005\"\037\n\rUpdTestRspNet\022\016\n\006da"
      "taId\030\001 \002(\005\"\023\n\021BuyRoleSoltReqNet\"3\n\021BuyRo"
      "leSoltRspNet\022\021\n\tsoltCount\030\001 \002(\005\022\013\n\003ret\030\002"
      " \002(\005\"\032\n\013GMCMDReqNet\022\013\n\003cmd\030\001 \002(\t\"\032\n\013GMCM"
      "DRspNet\022\013\n\003ret\030\001 \002(\t\">\n\023ItemChangeNotify"
      "Net\022\'\n\005infos\030\001 \003(\0132\030.protocol.ItemChange"
      "Info\"@\n\024EquipChangeNotifyNet\022(\n\005infos\030\001 "
      "\003(\0132\031.protocol.EquipChangeInfo\"\022\n\020BuyBag"
      "SoltReqNet\"t\n\020BuyBagSoltRspNet\022\013\n\003ret\030\001 "
      "\002(\005\022\027\n\017consumptionsBag\030\002 \002(\005\022\024\n\014material"
      "sBag\030\003 \002(\005\022\021\n\tquestsBag\030\004 \002(\005\022\021\n\tequipsB"
      "ag\030\005 \002(\005*\351\004\n\010NetMsgID\022\021\n\rNetMsgID_none\020\000"
      "\022\021\n\014cs_heartBeat\020\351\007\022\021\n\014sc_heartBeat\020\352\007\022\r"
      "\n\010cs_login\020\353\007\022\r\n\010sc_login\020\354\007\022\030\n\023cs_selec"
      "tGameServer\020\355\007\022\030\n\023sc_selectGameServer\020\356\007"
      "\022\021\n\014cs_loginGame\020\357\007\022\021\n\014sc_loginGame\020\360\007\022\022"
      "\n\rcs_createRole\020\361\007\022\022\n\rsc_createRole\020\362\007\022\022"
      "\n\rcs_enterScene\020\363\007\022\022\n\rsc_enterScene\020\364\007\022\023"
      "\n\016sc_errorNotify\020\372\007\022\020\n\013cs_udpLogin\020\373\007\022\020\n"
      "\013sc_udpLogin\020\374\007\022\017\n\ncs_udpTest\020\375\007\022\017\n\nsc_u"
      "dpTest\020\376\007\022\023\n\016cs_buyRoleSolt\020\377\007\022\023\n\016sc_buy"
      "RoleSolt\020\200\010\022\025\n\020cs_itemBagNotify\020\323\017\022\025\n\020sc"
      "_itemBagNotify\020\324\017\022\026\n\021cs_equipBagNotify\020\325"
      "\017\022\026\n\021sc_equipBagNotify\020\326\017\022\030\n\023sc_itemChan"
      "geNotify\020\330\017\022\031\n\024sc_equipChangeNotify\020\332\017\022\022"
      "\n\rcs_buyBagSolt\020\333\017\022\022\n\rsc_buyBagSolt\020\334\017\022\r"
      "\n\010cs_GMCMD\020\271\027\022\r\n\010sc_GMCMD\020\272\027"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3388);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/msg_net.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fmsg_5fnet_2eproto
namespace protocol {
const ::google::protobuf::EnumDescriptor* NetMsgID_descriptor() {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fmsg_5fnet_2eproto::file_level_enum_descriptors[0];
}
bool NetMsgID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
    case 2008:
    case 2010:
    case 2011:
    case 2012:
    case 3001:
    case 3002:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StringNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringNet::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringNet::StringNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsStringNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StringNet)
}
StringNet::StringNet(const StringNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.StringNet)
}

void StringNet::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringNet::~StringNet() {
  // @@protoc_insertion_point(destructor:protocol.StringNet)
  SharedDtor();
}

void StringNet::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringNet& StringNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsStringNet();
  return *internal_default_instance();
}

StringNet* StringNet::New(::google::protobuf::Arena* arena) const {
  StringNet* n = new StringNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StringNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StringNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.StringNet.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StringNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StringNet)
  return false;
#undef DO_
}

void StringNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StringNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.StringNet.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StringNet)
}

::google::protobuf::uint8* StringNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StringNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.StringNet.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StringNet)
  return target;
}

size_t StringNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StringNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StringNet)
  GOOGLE_DCHECK_NE(&from, this);
  const StringNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StringNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StringNet)
    MergeFrom(*source);
  }
}

void StringNet::MergeFrom(const StringNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StringNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void StringNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StringNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringNet::CopyFrom(const StringNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StringNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void StringNet::Swap(StringNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringNet::InternalSwap(StringNet* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint32Net::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32Net::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32Net::Uint32Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint32Net();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Uint32Net)
}
Uint32Net::Uint32Net(const Uint32Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:protocol.Uint32Net)
}

void Uint32Net::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0u;
}

Uint32Net::~Uint32Net() {
  // @@protoc_insertion_point(destructor:protocol.Uint32Net)
  SharedDtor();
}

void Uint32Net::SharedDtor() {
}

void Uint32Net::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32Net::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32Net& Uint32Net::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint32Net();
  return *internal_default_instance();
}

Uint32Net* Uint32Net::New(::google::protobuf::Arena* arena) const {
  Uint32Net* n = new Uint32Net;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint32Net::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Uint32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Uint32Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Uint32Net)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Uint32Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Uint32Net)
  return false;
#undef DO_
}

void Uint32Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Uint32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Uint32Net)
}

::google::protobuf::uint8* Uint32Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Uint32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Uint32Net)
  return target;
}

size_t Uint32Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Uint32Net)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Uint32Net)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Uint32Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Uint32Net)
    MergeFrom(*source);
  }
}

void Uint32Net::MergeFrom(const Uint32Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Uint32Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void Uint32Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Uint32Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32Net::CopyFrom(const Uint32Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Uint32Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32Net::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Uint32Net::Swap(Uint32Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32Net::InternalSwap(Uint32Net* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32Net::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint32ListNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint32ListNet::kValueListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint32ListNet::Uint32ListNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint32ListNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Uint32ListNet)
}
Uint32ListNet::Uint32ListNet(const Uint32ListNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      valuelist_(from.valuelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.Uint32ListNet)
}

void Uint32ListNet::SharedCtor() {
  _cached_size_ = 0;
}

Uint32ListNet::~Uint32ListNet() {
  // @@protoc_insertion_point(destructor:protocol.Uint32ListNet)
  SharedDtor();
}

void Uint32ListNet::SharedDtor() {
}

void Uint32ListNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint32ListNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint32ListNet& Uint32ListNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint32ListNet();
  return *internal_default_instance();
}

Uint32ListNet* Uint32ListNet::New(::google::protobuf::Arena* arena) const {
  Uint32ListNet* n = new Uint32ListNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint32ListNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Uint32ListNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valuelist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Uint32ListNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Uint32ListNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 valueList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_valuelist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_valuelist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Uint32ListNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Uint32ListNet)
  return false;
#undef DO_
}

void Uint32ListNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Uint32ListNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 valueList = 1;
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->valuelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Uint32ListNet)
}

::google::protobuf::uint8* Uint32ListNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Uint32ListNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 valueList = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->valuelist_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Uint32ListNet)
  return target;
}

size_t Uint32ListNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Uint32ListNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 valueList = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->valuelist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->valuelist_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint32ListNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Uint32ListNet)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint32ListNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint32ListNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Uint32ListNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Uint32ListNet)
    MergeFrom(*source);
  }
}

void Uint32ListNet::MergeFrom(const Uint32ListNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Uint32ListNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valuelist_.MergeFrom(from.valuelist_);
}

void Uint32ListNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Uint32ListNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint32ListNet::CopyFrom(const Uint32ListNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Uint32ListNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint32ListNet::IsInitialized() const {
  return true;
}

void Uint32ListNet::Swap(Uint32ListNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint32ListNet::InternalSwap(Uint32ListNet* other) {
  using std::swap;
  valuelist_.InternalSwap(&other->valuelist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint32ListNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint64Net::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint64Net::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint64Net::Uint64Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint64Net();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.Uint64Net)
}
Uint64Net::Uint64Net(const Uint64Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:protocol.Uint64Net)
}

void Uint64Net::SharedCtor() {
  _cached_size_ = 0;
  value_ = GOOGLE_ULONGLONG(0);
}

Uint64Net::~Uint64Net() {
  // @@protoc_insertion_point(destructor:protocol.Uint64Net)
  SharedDtor();
}

void Uint64Net::SharedDtor() {
}

void Uint64Net::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Uint64Net::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint64Net& Uint64Net::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUint64Net();
  return *internal_default_instance();
}

Uint64Net* Uint64Net::New(::google::protobuf::Arena* arena) const {
  Uint64Net* n = new Uint64Net;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Uint64Net::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Uint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Uint64Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.Uint64Net)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.Uint64Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.Uint64Net)
  return false;
#undef DO_
}

void Uint64Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.Uint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.Uint64Net)
}

::google::protobuf::uint8* Uint64Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Uint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Uint64Net)
  return target;
}

size_t Uint64Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Uint64Net)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Uint64Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.Uint64Net)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint64Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint64Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.Uint64Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.Uint64Net)
    MergeFrom(*source);
  }
}

void Uint64Net::MergeFrom(const Uint64Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.Uint64Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void Uint64Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.Uint64Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint64Net::CopyFrom(const Uint64Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Uint64Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint64Net::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Uint64Net::Swap(Uint64Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint64Net::InternalSwap(Uint64Net* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Uint64Net::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleInt32Net::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleInt32Net::kKeyFieldNumber;
const int DoubleInt32Net::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleInt32Net::DoubleInt32Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsDoubleInt32Net();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.DoubleInt32Net)
}
DoubleInt32Net::DoubleInt32Net(const DoubleInt32Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:protocol.DoubleInt32Net)
}

void DoubleInt32Net::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

DoubleInt32Net::~DoubleInt32Net() {
  // @@protoc_insertion_point(destructor:protocol.DoubleInt32Net)
  SharedDtor();
}

void DoubleInt32Net::SharedDtor() {
}

void DoubleInt32Net::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoubleInt32Net::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleInt32Net& DoubleInt32Net::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsDoubleInt32Net();
  return *internal_default_instance();
}

DoubleInt32Net* DoubleInt32Net::New(::google::protobuf::Arena* arena) const {
  DoubleInt32Net* n = new DoubleInt32Net;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoubleInt32Net::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DoubleInt32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&key_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&key_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleInt32Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.DoubleInt32Net)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.DoubleInt32Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.DoubleInt32Net)
  return false;
#undef DO_
}

void DoubleInt32Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.DoubleInt32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.DoubleInt32Net)
}

::google::protobuf::uint8* DoubleInt32Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DoubleInt32Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DoubleInt32Net)
  return target;
}

size_t DoubleInt32Net::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.DoubleInt32Net)
  size_t total_size = 0;

  if (has_key()) {
    // required int32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  if (has_value()) {
    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  return total_size;
}
size_t DoubleInt32Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DoubleInt32Net)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());

    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoubleInt32Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.DoubleInt32Net)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleInt32Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleInt32Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.DoubleInt32Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.DoubleInt32Net)
    MergeFrom(*source);
  }
}

void DoubleInt32Net::MergeFrom(const DoubleInt32Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.DoubleInt32Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DoubleInt32Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.DoubleInt32Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleInt32Net::CopyFrom(const DoubleInt32Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DoubleInt32Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleInt32Net::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DoubleInt32Net::Swap(DoubleInt32Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleInt32Net::InternalSwap(DoubleInt32Net* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoubleInt32Net::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleUint64Net::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleUint64Net::kKeyFieldNumber;
const int DoubleUint64Net::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleUint64Net::DoubleUint64Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsDoubleUint64Net();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.DoubleUint64Net)
}
DoubleUint64Net::DoubleUint64Net(const DoubleUint64Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:protocol.DoubleUint64Net)
}

void DoubleUint64Net::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

DoubleUint64Net::~DoubleUint64Net() {
  // @@protoc_insertion_point(destructor:protocol.DoubleUint64Net)
  SharedDtor();
}

void DoubleUint64Net::SharedDtor() {
}

void DoubleUint64Net::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoubleUint64Net::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleUint64Net& DoubleUint64Net::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsDoubleUint64Net();
  return *internal_default_instance();
}

DoubleUint64Net* DoubleUint64Net::New(::google::protobuf::Arena* arena) const {
  DoubleUint64Net* n = new DoubleUint64Net;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoubleUint64Net::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.DoubleUint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&key_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&key_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleUint64Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.DoubleUint64Net)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.DoubleUint64Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.DoubleUint64Net)
  return false;
#undef DO_
}

void DoubleUint64Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.DoubleUint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->key(), output);
  }

  // required uint64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.DoubleUint64Net)
}

::google::protobuf::uint8* DoubleUint64Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.DoubleUint64Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->key(), target);
  }

  // required uint64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.DoubleUint64Net)
  return target;
}

size_t DoubleUint64Net::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.DoubleUint64Net)
  size_t total_size = 0;

  if (has_key()) {
    // required uint64 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->key());
  }

  if (has_value()) {
    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  return total_size;
}
size_t DoubleUint64Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.DoubleUint64Net)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->key());

    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoubleUint64Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.DoubleUint64Net)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleUint64Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleUint64Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.DoubleUint64Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.DoubleUint64Net)
    MergeFrom(*source);
  }
}

void DoubleUint64Net::MergeFrom(const DoubleUint64Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.DoubleUint64Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DoubleUint64Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.DoubleUint64Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleUint64Net::CopyFrom(const DoubleUint64Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.DoubleUint64Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleUint64Net::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DoubleUint64Net::Swap(DoubleUint64Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleUint64Net::InternalSwap(DoubleUint64Net* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoubleUint64Net::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kServerIpFieldNumber;
const int ServerInfo::kServerPortFieldNumber;
const int ServerInfo::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsServerInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ServerInfo)
}
ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serverip()) {
    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  ::memcpy(&serverport_, &from.serverport_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&serverport_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:protocol.ServerInfo)
}

void ServerInfo::SharedCtor() {
  _cached_size_ = 0;
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&serverport_)) + sizeof(serverid_));
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:protocol.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfo& ServerInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsServerInfo();
  return *internal_default_instance();
}

ServerInfo* ServerInfo::New(::google::protobuf::Arena* arena) const {
  ServerInfo* n = new ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!serverip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*serverip_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&serverport_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&serverid_) -
        reinterpret_cast<char*>(&serverport_)) + sizeof(serverid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string serverIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverip().data(), static_cast<int>(this->serverip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.ServerInfo.serverIp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serverPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_serverport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 serverId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string serverIp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.ServerInfo.serverIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->serverip(), output);
  }

  // required int32 serverPort = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverport(), output);
  }

  // optional int32 serverId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string serverIp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), static_cast<int>(this->serverip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.ServerInfo.serverIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->serverip(), target);
  }

  // required int32 serverPort = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverport(), target);
  }

  // optional int32 serverId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ServerInfo)
  return target;
}

size_t ServerInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.ServerInfo)
  size_t total_size = 0;

  if (has_serverip()) {
    // required string serverIp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  if (has_serverport()) {
    // required int32 serverPort = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  return total_size;
}
size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ServerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string serverIp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());

    // required int32 serverPort = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 serverId = 3;
  if (has_serverid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_serverip();
      serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
    }
    if (cached_has_bits & 0x00000002u) {
      serverport_ = from.serverport_;
    }
    if (cached_has_bits & 0x00000004u) {
      serverid_ = from.serverid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  using std::swap;
  serverip_.Swap(&other->serverip_);
  swap(serverport_, other->serverport_);
  swap(serverid_, other->serverid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapPos::kXFieldNumber;
const int MapPos::kYFieldNumber;
const int MapPos::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapPos::MapPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsMapPos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MapPos)
}
MapPos::MapPos(const MapPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:protocol.MapPos)
}

void MapPos::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

MapPos::~MapPos() {
  // @@protoc_insertion_point(destructor:protocol.MapPos)
  SharedDtor();
}

void MapPos::SharedDtor() {
}

void MapPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapPos::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapPos& MapPos::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsMapPos();
  return *internal_default_instance();
}

MapPos* MapPos::New(::google::protobuf::Arena* arena) const {
  MapPos* n = new MapPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapPos::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MapPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MapPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MapPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MapPos)
  return false;
#undef DO_
}

void MapPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->x(), output);
  }

  // required int64 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y(), output);
  }

  // required int64 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MapPos)
}

::google::protobuf::uint8* MapPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->x(), target);
  }

  // required int64 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y(), target);
  }

  // required int64 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MapPos)
  return target;
}

size_t MapPos::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.MapPos)
  size_t total_size = 0;

  if (has_x()) {
    // required int64 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->x());
  }

  if (has_y()) {
    // required int64 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->y());
  }

  if (has_z()) {
    // required int64 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->z());
  }

  return total_size;
}
size_t MapPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MapPos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->x());

    // required int64 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->y());

    // required int64 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MapPos)
  GOOGLE_DCHECK_NE(&from, this);
  const MapPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MapPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MapPos)
    MergeFrom(*source);
  }
}

void MapPos::MergeFrom(const MapPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MapPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MapPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MapPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapPos::CopyFrom(const MapPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MapPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapPos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MapPos::Swap(MapPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapPos::InternalSwap(MapPos* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapPos::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerBaseInfo::kPlayerIdFieldNumber;
const int PlayerBaseInfo::kDiamondFieldNumber;
const int PlayerBaseInfo::kVipLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerBaseInfo::PlayerBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsPlayerBaseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.PlayerBaseInfo)
}
PlayerBaseInfo::PlayerBaseInfo(const PlayerBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&viplevel_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(viplevel_));
  // @@protoc_insertion_point(copy_constructor:protocol.PlayerBaseInfo)
}

void PlayerBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&viplevel_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(viplevel_));
}

PlayerBaseInfo::~PlayerBaseInfo() {
  // @@protoc_insertion_point(destructor:protocol.PlayerBaseInfo)
  SharedDtor();
}

void PlayerBaseInfo::SharedDtor() {
}

void PlayerBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBaseInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerBaseInfo& PlayerBaseInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsPlayerBaseInfo();
  return *internal_default_instance();
}

PlayerBaseInfo* PlayerBaseInfo::New(::google::protobuf::Arena* arena) const {
  PlayerBaseInfo* n = new PlayerBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.PlayerBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&viplevel_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(viplevel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.PlayerBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 diamond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_diamond();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 vipLevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_viplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.PlayerBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.PlayerBaseInfo)
  return false;
#undef DO_
}

void PlayerBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.PlayerBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->playerid(), output);
  }

  // required int32 diamond = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->diamond(), output);
  }

  // required int32 vipLevel = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->viplevel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.PlayerBaseInfo)
}

::google::protobuf::uint8* PlayerBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.PlayerBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->playerid(), target);
  }

  // required int32 diamond = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->diamond(), target);
  }

  // required int32 vipLevel = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->viplevel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.PlayerBaseInfo)
  return target;
}

size_t PlayerBaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.PlayerBaseInfo)
  size_t total_size = 0;

  if (has_playerid()) {
    // required int64 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());
  }

  if (has_diamond()) {
    // required int32 diamond = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamond());
  }

  if (has_viplevel()) {
    // required int32 vipLevel = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viplevel());
  }

  return total_size;
}
size_t PlayerBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.PlayerBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());

    // required int32 diamond = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamond());

    // required int32 vipLevel = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viplevel());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.PlayerBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.PlayerBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.PlayerBaseInfo)
    MergeFrom(*source);
  }
}

void PlayerBaseInfo::MergeFrom(const PlayerBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.PlayerBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000002u) {
      diamond_ = from.diamond_;
    }
    if (cached_has_bits & 0x00000004u) {
      viplevel_ = from.viplevel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.PlayerBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBaseInfo::CopyFrom(const PlayerBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.PlayerBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlayerBaseInfo::Swap(PlayerBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerBaseInfo::InternalSwap(PlayerBaseInfo* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(diamond_, other->diamond_);
  swap(viplevel_, other->viplevel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerBaseInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleBaseInfo::InitAsDefaultInstance() {
  ::protocol::_RoleBaseInfo_default_instance_._instance.get_mutable()->equips_ = const_cast< ::protocol::EquipInfo*>(
      ::protocol::EquipInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleBaseInfo::kRoleIdFieldNumber;
const int RoleBaseInfo::kJobIdFieldNumber;
const int RoleBaseInfo::kSexFieldNumber;
const int RoleBaseInfo::kNameFieldNumber;
const int RoleBaseInfo::kLevelFieldNumber;
const int RoleBaseInfo::kEquipsFieldNumber;
const int RoleBaseInfo::kMainCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleBaseInfo::RoleBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleBaseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.RoleBaseInfo)
}
RoleBaseInfo::RoleBaseInfo(const RoleBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_equips()) {
    equips_ = new ::protocol::EquipInfo(*from.equips_);
  } else {
    equips_ = NULL;
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maincityid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(maincityid_));
  // @@protoc_insertion_point(copy_constructor:protocol.RoleBaseInfo)
}

void RoleBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&equips_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maincityid_) -
      reinterpret_cast<char*>(&equips_)) + sizeof(maincityid_));
}

RoleBaseInfo::~RoleBaseInfo() {
  // @@protoc_insertion_point(destructor:protocol.RoleBaseInfo)
  SharedDtor();
}

void RoleBaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete equips_;
}

void RoleBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleBaseInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleBaseInfo& RoleBaseInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleBaseInfo();
  return *internal_default_instance();
}

RoleBaseInfo* RoleBaseInfo::New(::google::protobuf::Arena* arena) const {
  RoleBaseInfo* n = new RoleBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.RoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(equips_ != NULL);
      equips_->Clear();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&roleid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maincityid_) -
        reinterpret_cast<char*>(&roleid_)) + sizeof(maincityid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoleBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.RoleBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 jobId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_jobid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.RoleBaseInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protocol.EquipInfo equips = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 mainCityId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_maincityid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maincityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.RoleBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.RoleBaseInfo)
  return false;
#undef DO_
}

void RoleBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.RoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // required int32 jobId = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jobid(), output);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.RoleBaseInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional .protocol.EquipInfo equips = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->equips_, output);
  }

  // required int32 mainCityId = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->maincityid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.RoleBaseInfo)
}

::google::protobuf::uint8* RoleBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.RoleBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // required int32 jobId = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jobid(), target);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  // required string name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.RoleBaseInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional .protocol.EquipInfo equips = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->equips_, deterministic, target);
  }

  // required int32 mainCityId = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->maincityid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.RoleBaseInfo)
  return target;
}

size_t RoleBaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.RoleBaseInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_roleid()) {
    // required int64 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  if (has_jobid()) {
    // required int32 jobId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jobid());
  }

  if (has_sex()) {
    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_level()) {
    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_maincityid()) {
    // required int32 mainCityId = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maincityid());
  }

  return total_size;
}
size_t RoleBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.RoleBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007d) ^ 0x0000007d) == 0) {  // All required fields are present.
    // required string name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int64 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());

    // required int32 jobId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jobid());

    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 mainCityId = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maincityid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .protocol.EquipInfo equips = 6;
  if (has_equips()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->equips_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.RoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.RoleBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.RoleBaseInfo)
    MergeFrom(*source);
  }
}

void RoleBaseInfo::MergeFrom(const RoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.RoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_equips()->::protocol::EquipInfo::MergeFrom(from.equips());
    }
    if (cached_has_bits & 0x00000004u) {
      roleid_ = from.roleid_;
    }
    if (cached_has_bits & 0x00000008u) {
      jobid_ = from.jobid_;
    }
    if (cached_has_bits & 0x00000010u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      maincityid_ = from.maincityid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoleBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.RoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleBaseInfo::CopyFrom(const RoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.RoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007d) != 0x0000007d) return false;
  if (has_equips()) {
    if (!this->equips_->IsInitialized()) return false;
  }
  return true;
}

void RoleBaseInfo::Swap(RoleBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleBaseInfo::InternalSwap(RoleBaseInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(equips_, other->equips_);
  swap(roleid_, other->roleid_);
  swap(jobid_, other->jobid_);
  swap(sex_, other->sex_);
  swap(level_, other->level_);
  swap(maincityid_, other->maincityid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleBaseInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemBaseInfo::kItemTypeFieldNumber;
const int ItemBaseInfo::kIdFieldNumber;
const int ItemBaseInfo::kCountFieldNumber;
const int ItemBaseInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemBaseInfo::ItemBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBaseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ItemBaseInfo)
}
ItemBaseInfo::ItemBaseInfo(const ItemBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemtype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
  // @@protoc_insertion_point(copy_constructor:protocol.ItemBaseInfo)
}

void ItemBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
}

ItemBaseInfo::~ItemBaseInfo() {
  // @@protoc_insertion_point(destructor:protocol.ItemBaseInfo)
  SharedDtor();
}

void ItemBaseInfo::SharedDtor() {
}

void ItemBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemBaseInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemBaseInfo& ItemBaseInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBaseInfo();
  return *internal_default_instance();
}

ItemBaseInfo* ItemBaseInfo::New(::google::protobuf::Arena* arena) const {
  ItemBaseInfo* n = new ItemBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ItemBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&itemtype_) -
        reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ItemBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ItemBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ItemBaseInfo)
  return false;
#undef DO_
}

void ItemBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ItemBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 itemType = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemtype(), output);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // required int64 count = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->count(), output);
  }

  // required int64 uid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ItemBaseInfo)
}

::google::protobuf::uint8* ItemBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ItemBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 itemType = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemtype(), target);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // required int64 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->count(), target);
  }

  // required int64 uid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ItemBaseInfo)
  return target;
}

size_t ItemBaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.ItemBaseInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required int64 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int64 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  if (has_uid()) {
    // required int64 uid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  if (has_itemtype()) {
    // required int32 itemType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemtype());
  }

  return total_size;
}
size_t ItemBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ItemBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int64 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());

    // required int64 uid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());

    // required int32 itemType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ItemBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ItemBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ItemBaseInfo)
    MergeFrom(*source);
  }
}

void ItemBaseInfo::MergeFrom(const ItemBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ItemBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemtype_ = from.itemtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ItemBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemBaseInfo::CopyFrom(const ItemBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ItemBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ItemBaseInfo::Swap(ItemBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemBaseInfo::InternalSwap(ItemBaseInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(count_, other->count_);
  swap(uid_, other->uid_);
  swap(itemtype_, other->itemtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemBaseInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemInfo::InitAsDefaultInstance() {
  ::protocol::_ItemInfo_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::protocol::ItemBaseInfo*>(
      ::protocol::ItemBaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemInfo::kBaseInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemInfo::ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::protocol::ItemBaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.ItemInfo)
}

void ItemInfo::SharedCtor() {
  _cached_size_ = 0;
  baseinfo_ = NULL;
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:protocol.ItemInfo)
  SharedDtor();
}

void ItemInfo::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
}

void ItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemInfo& ItemInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemInfo();
  return *internal_default_instance();
}

ItemInfo* ItemInfo::New(::google::protobuf::Arena* arena) const {
  ItemInfo* n = new ItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(baseinfo_ != NULL);
    baseinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.ItemBaseInfo baseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ItemInfo)
  return false;
#undef DO_
}

void ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ItemInfo)
}

::google::protobuf::uint8* ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->baseinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.ItemBaseInfo baseInfo = 1;
  if (has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->baseinfo_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ItemInfo)
    MergeFrom(*source);
  }
}

void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::protocol::ItemBaseInfo::MergeFrom(from.baseinfo());
  }
}

void ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  return true;
}

void ItemInfo::Swap(ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemInfo::InternalSwap(ItemInfo* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemChangeInfo::InitAsDefaultInstance() {
  ::protocol::_ItemChangeInfo_default_instance_._instance.get_mutable()->info_ = const_cast< ::protocol::ItemInfo*>(
      ::protocol::ItemInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemChangeInfo::kInfoFieldNumber;
const int ItemChangeInfo::kChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemChangeInfo::ItemChangeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemChangeInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ItemChangeInfo)
}
ItemChangeInfo::ItemChangeInfo(const ItemChangeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::protocol::ItemInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  change_ = from.change_;
  // @@protoc_insertion_point(copy_constructor:protocol.ItemChangeInfo)
}

void ItemChangeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_) -
      reinterpret_cast<char*>(&info_)) + sizeof(change_));
}

ItemChangeInfo::~ItemChangeInfo() {
  // @@protoc_insertion_point(destructor:protocol.ItemChangeInfo)
  SharedDtor();
}

void ItemChangeInfo::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void ItemChangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemChangeInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemChangeInfo& ItemChangeInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemChangeInfo();
  return *internal_default_instance();
}

ItemChangeInfo* ItemChangeInfo::New(::google::protobuf::Arena* arena) const {
  ItemChangeInfo* n = new ItemChangeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemChangeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ItemChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  change_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemChangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ItemChangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.ItemInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 change = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ItemChangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ItemChangeInfo)
  return false;
#undef DO_
}

void ItemChangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ItemChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // required int32 change = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->change(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ItemChangeInfo)
}

::google::protobuf::uint8* ItemChangeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ItemChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // required int32 change = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->change(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ItemChangeInfo)
  return target;
}

size_t ItemChangeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.ItemChangeInfo)
  size_t total_size = 0;

  if (has_info()) {
    // required .protocol.ItemInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  if (has_change()) {
    // required int32 change = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->change());
  }

  return total_size;
}
size_t ItemChangeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ItemChangeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .protocol.ItemInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);

    // required int32 change = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->change());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemChangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ItemChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemChangeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemChangeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ItemChangeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ItemChangeInfo)
    MergeFrom(*source);
  }
}

void ItemChangeInfo::MergeFrom(const ItemChangeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ItemChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::protocol::ItemInfo::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      change_ = from.change_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemChangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ItemChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemChangeInfo::CopyFrom(const ItemChangeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ItemChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemChangeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  return true;
}

void ItemChangeInfo::Swap(ItemChangeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemChangeInfo::InternalSwap(ItemChangeInfo* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(change_, other->change_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemChangeInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemBag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemBag::kInfosFieldNumber;
const int ItemBag::kConsumptionsBagFieldNumber;
const int ItemBag::kMaterialsBagFieldNumber;
const int ItemBag::kQuestsBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemBag::ItemBag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBag();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ItemBag)
}
ItemBag::ItemBag(const ItemBag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&consumptionsbag_, &from.consumptionsbag_,
    static_cast<size_t>(reinterpret_cast<char*>(&questsbag_) -
    reinterpret_cast<char*>(&consumptionsbag_)) + sizeof(questsbag_));
  // @@protoc_insertion_point(copy_constructor:protocol.ItemBag)
}

void ItemBag::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&consumptionsbag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&questsbag_) -
      reinterpret_cast<char*>(&consumptionsbag_)) + sizeof(questsbag_));
}

ItemBag::~ItemBag() {
  // @@protoc_insertion_point(destructor:protocol.ItemBag)
  SharedDtor();
}

void ItemBag::SharedDtor() {
}

void ItemBag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemBag::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemBag& ItemBag::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemBag();
  return *internal_default_instance();
}

ItemBag* ItemBag::New(::google::protobuf::Arena* arena) const {
  ItemBag* n = new ItemBag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemBag::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ItemBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&consumptionsbag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&questsbag_) -
        reinterpret_cast<char*>(&consumptionsbag_)) + sizeof(questsbag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemBag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ItemBag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.ItemInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 consumptionsBag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_consumptionsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consumptionsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 materialsBag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_materialsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &materialsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 questsBag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_questsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &questsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ItemBag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ItemBag)
  return false;
#undef DO_
}

void ItemBag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ItemBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ItemInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 consumptionsBag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->consumptionsbag(), output);
  }

  // required int32 materialsBag = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->materialsbag(), output);
  }

  // required int32 questsBag = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->questsbag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ItemBag)
}

::google::protobuf::uint8* ItemBag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ItemBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ItemInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 consumptionsBag = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->consumptionsbag(), target);
  }

  // required int32 materialsBag = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->materialsbag(), target);
  }

  // required int32 questsBag = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->questsbag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ItemBag)
  return target;
}

size_t ItemBag::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.ItemBag)
  size_t total_size = 0;

  if (has_consumptionsbag()) {
    // required int32 consumptionsBag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consumptionsbag());
  }

  if (has_materialsbag()) {
    // required int32 materialsBag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->materialsbag());
  }

  if (has_questsbag()) {
    // required int32 questsBag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->questsbag());
  }

  return total_size;
}
size_t ItemBag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ItemBag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 consumptionsBag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consumptionsbag());

    // required int32 materialsBag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->materialsbag());

    // required int32 questsBag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->questsbag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .protocol.ItemInfo infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemBag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ItemBag)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemBag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemBag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ItemBag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ItemBag)
    MergeFrom(*source);
  }
}

void ItemBag::MergeFrom(const ItemBag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ItemBag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      consumptionsbag_ = from.consumptionsbag_;
    }
    if (cached_has_bits & 0x00000002u) {
      materialsbag_ = from.materialsbag_;
    }
    if (cached_has_bits & 0x00000004u) {
      questsbag_ = from.questsbag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemBag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ItemBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemBag::CopyFrom(const ItemBag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ItemBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemBag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infos())) return false;
  return true;
}

void ItemBag::Swap(ItemBag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemBag::InternalSwap(ItemBag* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(consumptionsbag_, other->consumptionsbag_);
  swap(materialsbag_, other->materialsbag_);
  swap(questsbag_, other->questsbag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemBag::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipBaseInfo::kIdFieldNumber;
const int EquipBaseInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipBaseInfo::EquipBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBaseInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipBaseInfo)
}
EquipBaseInfo::EquipBaseInfo(const EquipBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:protocol.EquipBaseInfo)
}

void EquipBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(uid_));
}

EquipBaseInfo::~EquipBaseInfo() {
  // @@protoc_insertion_point(destructor:protocol.EquipBaseInfo)
  SharedDtor();
}

void EquipBaseInfo::SharedDtor() {
}

void EquipBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipBaseInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipBaseInfo& EquipBaseInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBaseInfo();
  return *internal_default_instance();
}

EquipBaseInfo* EquipBaseInfo::New(::google::protobuf::Arena* arena) const {
  EquipBaseInfo* n = new EquipBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipBaseInfo)
  return false;
#undef DO_
}

void EquipBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int64 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipBaseInfo)
}

::google::protobuf::uint8* EquipBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int64 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipBaseInfo)
  return target;
}

size_t EquipBaseInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.EquipBaseInfo)
  size_t total_size = 0;

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_uid()) {
    // required int64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  return total_size;
}
size_t EquipBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipBaseInfo)
    MergeFrom(*source);
  }
}

void EquipBaseInfo::MergeFrom(const EquipBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EquipBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipBaseInfo::CopyFrom(const EquipBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void EquipBaseInfo::Swap(EquipBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipBaseInfo::InternalSwap(EquipBaseInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipBaseInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipInfo::InitAsDefaultInstance() {
  ::protocol::_EquipInfo_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::protocol::EquipBaseInfo*>(
      ::protocol::EquipBaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipInfo::kBaseInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipInfo::EquipInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipInfo)
}
EquipInfo::EquipInfo(const EquipInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::protocol::EquipBaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.EquipInfo)
}

void EquipInfo::SharedCtor() {
  _cached_size_ = 0;
  baseinfo_ = NULL;
}

EquipInfo::~EquipInfo() {
  // @@protoc_insertion_point(destructor:protocol.EquipInfo)
  SharedDtor();
}

void EquipInfo::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
}

void EquipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipInfo& EquipInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipInfo();
  return *internal_default_instance();
}

EquipInfo* EquipInfo::New(::google::protobuf::Arena* arena) const {
  EquipInfo* n = new EquipInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(baseinfo_ != NULL);
    baseinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.EquipBaseInfo baseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipInfo)
  return false;
#undef DO_
}

void EquipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipInfo)
}

::google::protobuf::uint8* EquipInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->baseinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipInfo)
  return target;
}

size_t EquipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.EquipBaseInfo baseInfo = 1;
  if (has_baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->baseinfo_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipInfo)
    MergeFrom(*source);
  }
}

void EquipInfo::MergeFrom(const EquipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseinfo()) {
    mutable_baseinfo()->::protocol::EquipBaseInfo::MergeFrom(from.baseinfo());
  }
}

void EquipInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipInfo::CopyFrom(const EquipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  return true;
}

void EquipInfo::Swap(EquipInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipInfo::InternalSwap(EquipInfo* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipChangeInfo::InitAsDefaultInstance() {
  ::protocol::_EquipChangeInfo_default_instance_._instance.get_mutable()->info_ = const_cast< ::protocol::EquipInfo*>(
      ::protocol::EquipInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipChangeInfo::kInfoFieldNumber;
const int EquipChangeInfo::kChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipChangeInfo::EquipChangeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipChangeInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipChangeInfo)
}
EquipChangeInfo::EquipChangeInfo(const EquipChangeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::protocol::EquipInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  change_ = from.change_;
  // @@protoc_insertion_point(copy_constructor:protocol.EquipChangeInfo)
}

void EquipChangeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_) -
      reinterpret_cast<char*>(&info_)) + sizeof(change_));
}

EquipChangeInfo::~EquipChangeInfo() {
  // @@protoc_insertion_point(destructor:protocol.EquipChangeInfo)
  SharedDtor();
}

void EquipChangeInfo::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void EquipChangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipChangeInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipChangeInfo& EquipChangeInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipChangeInfo();
  return *internal_default_instance();
}

EquipChangeInfo* EquipChangeInfo::New(::google::protobuf::Arena* arena) const {
  EquipChangeInfo* n = new EquipChangeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipChangeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  change_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipChangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipChangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.EquipInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 change = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipChangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipChangeInfo)
  return false;
#undef DO_
}

void EquipChangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // required int32 change = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->change(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipChangeInfo)
}

::google::protobuf::uint8* EquipChangeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // required int32 change = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->change(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipChangeInfo)
  return target;
}

size_t EquipChangeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.EquipChangeInfo)
  size_t total_size = 0;

  if (has_info()) {
    // required .protocol.EquipInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  if (has_change()) {
    // required int32 change = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->change());
  }

  return total_size;
}
size_t EquipChangeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipChangeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .protocol.EquipInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);

    // required int32 change = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->change());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipChangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipChangeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipChangeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipChangeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipChangeInfo)
    MergeFrom(*source);
  }
}

void EquipChangeInfo::MergeFrom(const EquipChangeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::protocol::EquipInfo::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      change_ = from.change_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EquipChangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipChangeInfo::CopyFrom(const EquipChangeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipChangeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  return true;
}

void EquipChangeInfo::Swap(EquipChangeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipChangeInfo::InternalSwap(EquipChangeInfo* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(change_, other->change_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipChangeInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipBag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipBag::kInfosFieldNumber;
const int EquipBag::kBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipBag::EquipBag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBag();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipBag)
}
EquipBag::EquipBag(const EquipBag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bag_ = from.bag_;
  // @@protoc_insertion_point(copy_constructor:protocol.EquipBag)
}

void EquipBag::SharedCtor() {
  _cached_size_ = 0;
  bag_ = 0;
}

EquipBag::~EquipBag() {
  // @@protoc_insertion_point(destructor:protocol.EquipBag)
  SharedDtor();
}

void EquipBag::SharedDtor() {
}

void EquipBag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipBag::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipBag& EquipBag::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBag();
  return *internal_default_instance();
}

EquipBag* EquipBag::New(::google::protobuf::Arena* arena) const {
  EquipBag* n = new EquipBag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipBag::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  bag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipBag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipBag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.EquipInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 bag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipBag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipBag)
  return false;
#undef DO_
}

void EquipBag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.EquipInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 bag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipBag)
}

::google::protobuf::uint8* EquipBag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipBag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.EquipInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 bag = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipBag)
  return target;
}

size_t EquipBag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipBag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 bag = 2;
  if (has_bag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bag());
  }
  // repeated .protocol.EquipInfo infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipBag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipBag)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipBag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipBag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipBag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipBag)
    MergeFrom(*source);
  }
}

void EquipBag::MergeFrom(const EquipBag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipBag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.has_bag()) {
    set_bag(from.bag());
  }
}

void EquipBag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipBag::CopyFrom(const EquipBag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipBag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->infos())) return false;
  return true;
}

void EquipBag::Swap(EquipBag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipBag::InternalSwap(EquipBag* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(bag_, other->bag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipBag::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoleInfo::InitAsDefaultInstance() {
  ::protocol::_RoleInfo_default_instance_._instance.get_mutable()->baseinfo_ = const_cast< ::protocol::RoleBaseInfo*>(
      ::protocol::RoleBaseInfo::internal_default_instance());
  ::protocol::_RoleInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::protocol::MapPos*>(
      ::protocol::MapPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleInfo::kBaseInfoFieldNumber;
const int RoleInfo::kMoneyFieldNumber;
const int RoleInfo::kExpFieldNumber;
const int RoleInfo::kPosFieldNumber;
const int RoleInfo::kSkillPointFieldNumber;
const int RoleInfo::kEnergyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleInfo::RoleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.RoleInfo)
}
RoleInfo::RoleInfo(const RoleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseinfo()) {
    baseinfo_ = new ::protocol::RoleBaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::protocol::MapPos(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&money_, &from.money_,
    static_cast<size_t>(reinterpret_cast<char*>(&energy_) -
    reinterpret_cast<char*>(&money_)) + sizeof(energy_));
  // @@protoc_insertion_point(copy_constructor:protocol.RoleInfo)
}

void RoleInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&energy_) -
      reinterpret_cast<char*>(&baseinfo_)) + sizeof(energy_));
}

RoleInfo::~RoleInfo() {
  // @@protoc_insertion_point(destructor:protocol.RoleInfo)
  SharedDtor();
}

void RoleInfo::SharedDtor() {
  if (this != internal_default_instance()) delete baseinfo_;
  if (this != internal_default_instance()) delete pos_;
}

void RoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfo::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleInfo& RoleInfo::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsRoleInfo();
  return *internal_default_instance();
}

RoleInfo* RoleInfo::New(::google::protobuf::Arena* arena) const {
  RoleInfo* n = new RoleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.RoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(baseinfo_ != NULL);
      baseinfo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&money_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&energy_) -
        reinterpret_cast<char*>(&money_)) + sizeof(energy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.RoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.RoleBaseInfo baseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .protocol.MapPos pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 skillPoint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_skillpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 energy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_energy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &energy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.RoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.RoleInfo)
  return false;
#undef DO_
}

void RoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.RoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.RoleBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseinfo_, output);
  }

  // required int64 money = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  // required int64 exp = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->exp(), output);
  }

  // required .protocol.MapPos pos = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pos_, output);
  }

  // optional int32 skillPoint = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skillpoint(), output);
  }

  // optional int32 energy = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->energy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.RoleInfo)
}

::google::protobuf::uint8* RoleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.RoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.RoleBaseInfo baseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->baseinfo_, deterministic, target);
  }

  // required int64 money = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  // required int64 exp = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->exp(), target);
  }

  // required .protocol.MapPos pos = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->pos_, deterministic, target);
  }

  // optional int32 skillPoint = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skillpoint(), target);
  }

  // optional int32 energy = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->energy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.RoleInfo)
  return target;
}

size_t RoleInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.RoleInfo)
  size_t total_size = 0;

  if (has_baseinfo()) {
    // required .protocol.RoleBaseInfo baseInfo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->baseinfo_);
  }

  if (has_pos()) {
    // required .protocol.MapPos pos = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  if (has_money()) {
    // required int64 money = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());
  }

  if (has_exp()) {
    // required int64 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  return total_size;
}
size_t RoleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.RoleInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .protocol.RoleBaseInfo baseInfo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->baseinfo_);

    // required .protocol.MapPos pos = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);

    // required int64 money = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());

    // required int64 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional int32 skillPoint = 6;
    if (has_skillpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillpoint());
    }

    // optional int32 energy = 7;
    if (has_energy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energy());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.RoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.RoleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.RoleInfo)
    MergeFrom(*source);
  }
}

void RoleInfo::MergeFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.RoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseinfo()->::protocol::RoleBaseInfo::MergeFrom(from.baseinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::protocol::MapPos::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000008u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000010u) {
      skillpoint_ = from.skillpoint_;
    }
    if (cached_has_bits & 0x00000020u) {
      energy_ = from.energy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfo::CopyFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void RoleInfo::Swap(RoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleInfo::InternalSwap(RoleInfo* other) {
  using std::swap;
  swap(baseinfo_, other->baseinfo_);
  swap(pos_, other->pos_);
  swap(money_, other->money_);
  swap(exp_, other->exp_);
  swap(skillpoint_, other->skillpoint_);
  swap(energy_, other->energy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleInfo::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReqNet::kChannelIdFieldNumber;
const int LoginReqNet::kUidFieldNumber;
const int LoginReqNet::kSdkTokenFieldNumber;
const int LoginReqNet::kSdkSessionFieldNumber;
const int LoginReqNet::kLoginTypeFieldNumber;
const int LoginReqNet::kVersionFieldNumber;
const int LoginReqNet::kRuntimeFieldNumber;
const int LoginReqNet::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReqNet::LoginReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.LoginReqNet)
}
LoginReqNet::LoginReqNet(const LoginReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channelid()) {
    channelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channelid_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  sdktoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdktoken()) {
    sdktoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdktoken_);
  }
  sdksession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdksession()) {
    sdksession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdksession_);
  }
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceid()) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  ::memcpy(&logintype_, &from.logintype_,
    static_cast<size_t>(reinterpret_cast<char*>(&runtime_) -
    reinterpret_cast<char*>(&logintype_)) + sizeof(runtime_));
  // @@protoc_insertion_point(copy_constructor:protocol.LoginReqNet)
}

void LoginReqNet::SharedCtor() {
  _cached_size_ = 0;
  channelid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdktoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdksession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logintype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&runtime_) -
      reinterpret_cast<char*>(&logintype_)) + sizeof(runtime_));
}

LoginReqNet::~LoginReqNet() {
  // @@protoc_insertion_point(destructor:protocol.LoginReqNet)
  SharedDtor();
}

void LoginReqNet::SharedDtor() {
  channelid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdktoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdksession_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReqNet& LoginReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginReqNet();
  return *internal_default_instance();
}

LoginReqNet* LoginReqNet::New(::google::protobuf::Arena* arena) const {
  LoginReqNet* n = new LoginReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.LoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!channelid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channelid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!uid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!sdktoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sdktoken_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!sdksession_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sdksession_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!deviceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deviceid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&logintype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&runtime_) -
        reinterpret_cast<char*>(&logintype_)) + sizeof(runtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.LoginReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string channelId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channelid().data(), static_cast<int>(this->channelid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginReqNet.channelId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginReqNet.uid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sdkToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdktoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdktoken().data(), static_cast<int>(this->sdktoken().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginReqNet.sdkToken");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sdkSession = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdksession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdksession().data(), static_cast<int>(this->sdksession().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginReqNet.sdkSession");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 loginType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_logintype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logintype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 runtime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_runtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string deviceId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginReqNet.deviceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.LoginReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.LoginReqNet)
  return false;
#undef DO_
}

void LoginReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.LoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channelId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channelid().data(), static_cast<int>(this->channelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.channelId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channelid(), output);
  }

  // required string uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uid(), output);
  }

  // optional string sdkToken = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdktoken().data(), static_cast<int>(this->sdktoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.sdkToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdktoken(), output);
  }

  // optional string sdkSession = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdksession().data(), static_cast<int>(this->sdksession().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.sdkSession");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdksession(), output);
  }

  // required int32 loginType = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->logintype(), output);
  }

  // optional int32 version = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->version(), output);
  }

  // optional int32 runtime = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->runtime(), output);
  }

  // optional string deviceId = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->deviceid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.LoginReqNet)
}

::google::protobuf::uint8* LoginReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.LoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channelId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channelid().data(), static_cast<int>(this->channelid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.channelId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channelid(), target);
  }

  // required string uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uid(), target);
  }

  // optional string sdkToken = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdktoken().data(), static_cast<int>(this->sdktoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.sdkToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdktoken(), target);
  }

  // optional string sdkSession = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdksession().data(), static_cast<int>(this->sdksession().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.sdkSession");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdksession(), target);
  }

  // required int32 loginType = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->logintype(), target);
  }

  // optional int32 version = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->version(), target);
  }

  // optional int32 runtime = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->runtime(), target);
  }

  // optional string deviceId = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginReqNet.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->deviceid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.LoginReqNet)
  return target;
}

size_t LoginReqNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.LoginReqNet)
  size_t total_size = 0;

  if (has_uid()) {
    // required string uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  if (has_logintype()) {
    // required int32 loginType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logintype());
  }

  return total_size;
}
size_t LoginReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.LoginReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000022) ^ 0x00000022) == 0) {  // All required fields are present.
    // required string uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());

    // required int32 loginType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logintype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string channelId = 1;
  if (has_channelid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channelid());
  }

  if (_has_bits_[0 / 32] & 28u) {
    // optional string sdkToken = 3;
    if (has_sdktoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdktoken());
    }

    // optional string sdkSession = 4;
    if (has_sdksession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdksession());
    }

    // optional string deviceId = 8;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceid());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional int32 version = 6;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 runtime = 7;
    if (has_runtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->runtime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.LoginReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.LoginReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.LoginReqNet)
    MergeFrom(*source);
  }
}

void LoginReqNet::MergeFrom(const LoginReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.LoginReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_channelid();
      channelid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channelid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sdktoken();
      sdktoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdktoken_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sdksession();
      sdksession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdksession_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_deviceid();
      deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
    }
    if (cached_has_bits & 0x00000020u) {
      logintype_ = from.logintype_;
    }
    if (cached_has_bits & 0x00000040u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000080u) {
      runtime_ = from.runtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.LoginReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReqNet::CopyFrom(const LoginReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.LoginReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000022) != 0x00000022) return false;
  return true;
}

void LoginReqNet::Swap(LoginReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReqNet::InternalSwap(LoginReqNet* other) {
  using std::swap;
  channelid_.Swap(&other->channelid_);
  uid_.Swap(&other->uid_);
  sdktoken_.Swap(&other->sdktoken_);
  sdksession_.Swap(&other->sdksession_);
  deviceid_.Swap(&other->deviceid_);
  swap(logintype_, other->logintype_);
  swap(version_, other->version_);
  swap(runtime_, other->runtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRspNet::kAccountFieldNumber;
const int LoginRspNet::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRspNet::LoginRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.LoginRspNet)
}
LoginRspNet::LoginRspNet(const LoginRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:protocol.LoginRspNet)
}

void LoginRspNet::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

LoginRspNet::~LoginRspNet() {
  // @@protoc_insertion_point(destructor:protocol.LoginRspNet)
  SharedDtor();
}

void LoginRspNet::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRspNet& LoginRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginRspNet();
  return *internal_default_instance();
}

LoginRspNet* LoginRspNet::New(::google::protobuf::Arena* arena) const {
  LoginRspNet* n = new LoginRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.LoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.LoginRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginRspNet.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.LoginRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.LoginRspNet)
  return false;
#undef DO_
}

void LoginRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.LoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginRspNet.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // required int32 ret = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.LoginRspNet)
}

::google::protobuf::uint8* LoginRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.LoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginRspNet.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // required int32 ret = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.LoginRspNet)
  return target;
}

size_t LoginRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.LoginRspNet)
  size_t total_size = 0;

  if (has_account()) {
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  if (has_ret()) {
    // required int32 ret = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  return total_size;
}
size_t LoginRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.LoginRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());

    // required int32 ret = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.LoginRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.LoginRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.LoginRspNet)
    MergeFrom(*source);
  }
}

void LoginRspNet::MergeFrom(const LoginRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.LoginRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.LoginRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRspNet::CopyFrom(const LoginRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.LoginRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoginRspNet::Swap(LoginRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRspNet::InternalSwap(LoginRspNet* other) {
  using std::swap;
  account_.Swap(&other->account_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectGameServerReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectGameServerReqNet::kGameServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectGameServerReqNet::SelectGameServerReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsSelectGameServerReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SelectGameServerReqNet)
}
SelectGameServerReqNet::SelectGameServerReqNet(const SelectGameServerReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameserverid_ = from.gameserverid_;
  // @@protoc_insertion_point(copy_constructor:protocol.SelectGameServerReqNet)
}

void SelectGameServerReqNet::SharedCtor() {
  _cached_size_ = 0;
  gameserverid_ = 0;
}

SelectGameServerReqNet::~SelectGameServerReqNet() {
  // @@protoc_insertion_point(destructor:protocol.SelectGameServerReqNet)
  SharedDtor();
}

void SelectGameServerReqNet::SharedDtor() {
}

void SelectGameServerReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectGameServerReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectGameServerReqNet& SelectGameServerReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsSelectGameServerReqNet();
  return *internal_default_instance();
}

SelectGameServerReqNet* SelectGameServerReqNet::New(::google::protobuf::Arena* arena) const {
  SelectGameServerReqNet* n = new SelectGameServerReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectGameServerReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SelectGameServerReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gameserverid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectGameServerReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SelectGameServerReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 gameServerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gameserverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SelectGameServerReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SelectGameServerReqNet)
  return false;
#undef DO_
}

void SelectGameServerReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SelectGameServerReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 gameServerId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gameserverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SelectGameServerReqNet)
}

::google::protobuf::uint8* SelectGameServerReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SelectGameServerReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 gameServerId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gameserverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SelectGameServerReqNet)
  return target;
}

size_t SelectGameServerReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SelectGameServerReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 gameServerId = 1;
  if (has_gameserverid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gameserverid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectGameServerReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SelectGameServerReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectGameServerReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectGameServerReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SelectGameServerReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SelectGameServerReqNet)
    MergeFrom(*source);
  }
}

void SelectGameServerReqNet::MergeFrom(const SelectGameServerReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SelectGameServerReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gameserverid()) {
    set_gameserverid(from.gameserverid());
  }
}

void SelectGameServerReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SelectGameServerReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectGameServerReqNet::CopyFrom(const SelectGameServerReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SelectGameServerReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectGameServerReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SelectGameServerReqNet::Swap(SelectGameServerReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectGameServerReqNet::InternalSwap(SelectGameServerReqNet* other) {
  using std::swap;
  swap(gameserverid_, other->gameserverid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectGameServerReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SelectGameServerRspNet::InitAsDefaultInstance() {
  ::protocol::_SelectGameServerRspNet_default_instance_._instance.get_mutable()->server_ = const_cast< ::protocol::ServerInfo*>(
      ::protocol::ServerInfo::internal_default_instance());
  ::protocol::_SelectGameServerRspNet_default_instance_._instance.get_mutable()->udpserver_ = const_cast< ::protocol::ServerInfo*>(
      ::protocol::ServerInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectGameServerRspNet::kServerFieldNumber;
const int SelectGameServerRspNet::kUdpserverFieldNumber;
const int SelectGameServerRspNet::kGameTokenFieldNumber;
const int SelectGameServerRspNet::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectGameServerRspNet::SelectGameServerRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsSelectGameServerRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.SelectGameServerRspNet)
}
SelectGameServerRspNet::SelectGameServerRspNet(const SelectGameServerRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gametoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gametoken()) {
    gametoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gametoken_);
  }
  if (from.has_server()) {
    server_ = new ::protocol::ServerInfo(*from.server_);
  } else {
    server_ = NULL;
  }
  if (from.has_udpserver()) {
    udpserver_ = new ::protocol::ServerInfo(*from.udpserver_);
  } else {
    udpserver_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:protocol.SelectGameServerRspNet)
}

void SelectGameServerRspNet::SharedCtor() {
  _cached_size_ = 0;
  gametoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&server_)) + sizeof(ret_));
}

SelectGameServerRspNet::~SelectGameServerRspNet() {
  // @@protoc_insertion_point(destructor:protocol.SelectGameServerRspNet)
  SharedDtor();
}

void SelectGameServerRspNet::SharedDtor() {
  gametoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete server_;
  if (this != internal_default_instance()) delete udpserver_;
}

void SelectGameServerRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectGameServerRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectGameServerRspNet& SelectGameServerRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsSelectGameServerRspNet();
  return *internal_default_instance();
}

SelectGameServerRspNet* SelectGameServerRspNet::New(::google::protobuf::Arena* arena) const {
  SelectGameServerRspNet* n = new SelectGameServerRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectGameServerRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.SelectGameServerRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gametoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gametoken_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(server_ != NULL);
      server_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(udpserver_ != NULL);
      udpserver_->Clear();
    }
  }
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectGameServerRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.SelectGameServerRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.ServerInfo server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protocol.ServerInfo udpserver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_udpserver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string gameToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gametoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gametoken().data(), static_cast<int>(this->gametoken().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.SelectGameServerRspNet.gameToken");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ret = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.SelectGameServerRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.SelectGameServerRspNet)
  return false;
#undef DO_
}

void SelectGameServerRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.SelectGameServerRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ServerInfo server = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_, output);
  }

  // optional .protocol.ServerInfo udpserver = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->udpserver_, output);
  }

  // required string gameToken = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gametoken().data(), static_cast<int>(this->gametoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.SelectGameServerRspNet.gameToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gametoken(), output);
  }

  // required int32 ret = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.SelectGameServerRspNet)
}

::google::protobuf::uint8* SelectGameServerRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.SelectGameServerRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ServerInfo server = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->server_, deterministic, target);
  }

  // optional .protocol.ServerInfo udpserver = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->udpserver_, deterministic, target);
  }

  // required string gameToken = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gametoken().data(), static_cast<int>(this->gametoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.SelectGameServerRspNet.gameToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gametoken(), target);
  }

  // required int32 ret = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.SelectGameServerRspNet)
  return target;
}

size_t SelectGameServerRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.SelectGameServerRspNet)
  size_t total_size = 0;

  if (has_gametoken()) {
    // required string gameToken = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gametoken());
  }

  if (has_server()) {
    // required .protocol.ServerInfo server = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_);
  }

  if (has_ret()) {
    // required int32 ret = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  return total_size;
}
size_t SelectGameServerRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.SelectGameServerRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required string gameToken = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gametoken());

    // required .protocol.ServerInfo server = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_);

    // required int32 ret = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .protocol.ServerInfo udpserver = 2;
  if (has_udpserver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->udpserver_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectGameServerRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.SelectGameServerRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectGameServerRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectGameServerRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.SelectGameServerRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.SelectGameServerRspNet)
    MergeFrom(*source);
  }
}

void SelectGameServerRspNet::MergeFrom(const SelectGameServerRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.SelectGameServerRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gametoken();
      gametoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gametoken_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_server()->::protocol::ServerInfo::MergeFrom(from.server());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_udpserver()->::protocol::ServerInfo::MergeFrom(from.udpserver());
    }
    if (cached_has_bits & 0x00000008u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SelectGameServerRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.SelectGameServerRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectGameServerRspNet::CopyFrom(const SelectGameServerRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.SelectGameServerRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectGameServerRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  if (has_server()) {
    if (!this->server_->IsInitialized()) return false;
  }
  if (has_udpserver()) {
    if (!this->udpserver_->IsInitialized()) return false;
  }
  return true;
}

void SelectGameServerRspNet::Swap(SelectGameServerRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectGameServerRspNet::InternalSwap(SelectGameServerRspNet* other) {
  using std::swap;
  gametoken_.Swap(&other->gametoken_);
  swap(server_, other->server_);
  swap(udpserver_, other->udpserver_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectGameServerRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginGameReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginGameReqNet::kGameTokenFieldNumber;
const int LoginGameReqNet::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginGameReqNet::LoginGameReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginGameReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.LoginGameReqNet)
}
LoginGameReqNet::LoginGameReqNet(const LoginGameReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gametoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gametoken()) {
    gametoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gametoken_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.LoginGameReqNet)
}

void LoginGameReqNet::SharedCtor() {
  _cached_size_ = 0;
  gametoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginGameReqNet::~LoginGameReqNet() {
  // @@protoc_insertion_point(destructor:protocol.LoginGameReqNet)
  SharedDtor();
}

void LoginGameReqNet::SharedDtor() {
  gametoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginGameReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginGameReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginGameReqNet& LoginGameReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginGameReqNet();
  return *internal_default_instance();
}

LoginGameReqNet* LoginGameReqNet::New(::google::protobuf::Arena* arena) const {
  LoginGameReqNet* n = new LoginGameReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginGameReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.LoginGameReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gametoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gametoken_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginGameReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.LoginGameReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string gameToken = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gametoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gametoken().data(), static_cast<int>(this->gametoken().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginGameReqNet.gameToken");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.LoginGameReqNet.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.LoginGameReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.LoginGameReqNet)
  return false;
#undef DO_
}

void LoginGameReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.LoginGameReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string gameToken = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gametoken().data(), static_cast<int>(this->gametoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginGameReqNet.gameToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gametoken(), output);
  }

  // required string account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginGameReqNet.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.LoginGameReqNet)
}

::google::protobuf::uint8* LoginGameReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.LoginGameReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string gameToken = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gametoken().data(), static_cast<int>(this->gametoken().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginGameReqNet.gameToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gametoken(), target);
  }

  // required string account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.LoginGameReqNet.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.LoginGameReqNet)
  return target;
}

size_t LoginGameReqNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.LoginGameReqNet)
  size_t total_size = 0;

  if (has_gametoken()) {
    // required string gameToken = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gametoken());
  }

  if (has_account()) {
    // required string account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  return total_size;
}
size_t LoginGameReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.LoginGameReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string gameToken = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gametoken());

    // required string account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginGameReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.LoginGameReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginGameReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginGameReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.LoginGameReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.LoginGameReqNet)
    MergeFrom(*source);
  }
}

void LoginGameReqNet::MergeFrom(const LoginGameReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.LoginGameReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gametoken();
      gametoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gametoken_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
  }
}

void LoginGameReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.LoginGameReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginGameReqNet::CopyFrom(const LoginGameReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.LoginGameReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoginGameReqNet::Swap(LoginGameReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginGameReqNet::InternalSwap(LoginGameReqNet* other) {
  using std::swap;
  gametoken_.Swap(&other->gametoken_);
  account_.Swap(&other->account_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginGameReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginGameRspNet::InitAsDefaultInstance() {
  ::protocol::_LoginGameRspNet_default_instance_._instance.get_mutable()->player_ = const_cast< ::protocol::PlayerBaseInfo*>(
      ::protocol::PlayerBaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginGameRspNet::kRetFieldNumber;
const int LoginGameRspNet::kPlayerFieldNumber;
const int LoginGameRspNet::kRolesFieldNumber;
const int LoginGameRspNet::kSoltCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginGameRspNet::LoginGameRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginGameRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.LoginGameRspNet)
}
LoginGameRspNet::LoginGameRspNet(const LoginGameRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::protocol::PlayerBaseInfo(*from.player_);
  } else {
    player_ = NULL;
  }
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&soltcount_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(soltcount_));
  // @@protoc_insertion_point(copy_constructor:protocol.LoginGameRspNet)
}

void LoginGameRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&soltcount_) -
      reinterpret_cast<char*>(&player_)) + sizeof(soltcount_));
}

LoginGameRspNet::~LoginGameRspNet() {
  // @@protoc_insertion_point(destructor:protocol.LoginGameRspNet)
  SharedDtor();
}

void LoginGameRspNet::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void LoginGameRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginGameRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginGameRspNet& LoginGameRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsLoginGameRspNet();
  return *internal_default_instance();
}

LoginGameRspNet* LoginGameRspNet::New(::google::protobuf::Arena* arena) const {
  LoginGameRspNet* n = new LoginGameRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginGameRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.LoginGameRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&ret_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&soltcount_) -
        reinterpret_cast<char*>(&ret_)) + sizeof(soltcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginGameRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.LoginGameRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protocol.PlayerBaseInfo player = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protocol.RoleBaseInfo roles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 soltCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_soltcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soltcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.LoginGameRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.LoginGameRspNet)
  return false;
#undef DO_
}

void LoginGameRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.LoginGameRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .protocol.PlayerBaseInfo player = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->player_, output);
  }

  // repeated .protocol.RoleBaseInfo roles = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->roles(static_cast<int>(i)), output);
  }

  // required int32 soltCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->soltcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.LoginGameRspNet)
}

::google::protobuf::uint8* LoginGameRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.LoginGameRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .protocol.PlayerBaseInfo player = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->player_, deterministic, target);
  }

  // repeated .protocol.RoleBaseInfo roles = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // required int32 soltCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->soltcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.LoginGameRspNet)
  return target;
}

size_t LoginGameRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.LoginGameRspNet)
  size_t total_size = 0;

  if (has_ret()) {
    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  if (has_soltcount()) {
    // required int32 soltCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soltcount());
  }

  return total_size;
}
size_t LoginGameRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.LoginGameRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

    // required int32 soltCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soltcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .protocol.RoleBaseInfo roles = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // optional .protocol.PlayerBaseInfo player = 2;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginGameRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.LoginGameRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginGameRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginGameRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.LoginGameRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.LoginGameRspNet)
    MergeFrom(*source);
  }
}

void LoginGameRspNet::MergeFrom(const LoginGameRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.LoginGameRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_player()->::protocol::PlayerBaseInfo::MergeFrom(from.player());
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    if (cached_has_bits & 0x00000004u) {
      soltcount_ = from.soltcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginGameRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.LoginGameRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginGameRspNet::CopyFrom(const LoginGameRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.LoginGameRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->roles())) return false;
  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void LoginGameRspNet::Swap(LoginGameRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginGameRspNet::InternalSwap(LoginGameRspNet* other) {
  using std::swap;
  roles_.InternalSwap(&other->roles_);
  swap(player_, other->player_);
  swap(ret_, other->ret_);
  swap(soltcount_, other->soltcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginGameRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoleReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleReqNet::kNameFieldNumber;
const int CreateRoleReqNet::kJobIdFieldNumber;
const int CreateRoleReqNet::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleReqNet::CreateRoleReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsCreateRoleReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CreateRoleReqNet)
}
CreateRoleReqNet::CreateRoleReqNet(const CreateRoleReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&jobid_, &from.jobid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&jobid_)) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:protocol.CreateRoleReqNet)
}

void CreateRoleReqNet::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&jobid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&jobid_)) + sizeof(sex_));
}

CreateRoleReqNet::~CreateRoleReqNet() {
  // @@protoc_insertion_point(destructor:protocol.CreateRoleReqNet)
  SharedDtor();
}

void CreateRoleReqNet::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoleReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleReqNet& CreateRoleReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsCreateRoleReqNet();
  return *internal_default_instance();
}

CreateRoleReqNet* CreateRoleReqNet::New(::google::protobuf::Arena* arena) const {
  CreateRoleReqNet* n = new CreateRoleReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CreateRoleReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&jobid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sex_) -
        reinterpret_cast<char*>(&jobid_)) + sizeof(sex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoleReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CreateRoleReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.CreateRoleReqNet.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 jobId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_jobid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CreateRoleReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CreateRoleReqNet)
  return false;
#undef DO_
}

void CreateRoleReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CreateRoleReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.CreateRoleReqNet.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 jobId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jobid(), output);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.CreateRoleReqNet)
}

::google::protobuf::uint8* CreateRoleReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CreateRoleReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.CreateRoleReqNet.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 jobId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jobid(), target);
  }

  // required int32 sex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CreateRoleReqNet)
  return target;
}

size_t CreateRoleReqNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.CreateRoleReqNet)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_jobid()) {
    // required int32 jobId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jobid());
  }

  if (has_sex()) {
    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  return total_size;
}
size_t CreateRoleReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CreateRoleReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 jobId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jobid());

    // required int32 sex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CreateRoleReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CreateRoleReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CreateRoleReqNet)
    MergeFrom(*source);
  }
}

void CreateRoleReqNet::MergeFrom(const CreateRoleReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CreateRoleReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      jobid_ = from.jobid_;
    }
    if (cached_has_bits & 0x00000004u) {
      sex_ = from.sex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateRoleReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CreateRoleReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleReqNet::CopyFrom(const CreateRoleReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CreateRoleReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CreateRoleReqNet::Swap(CreateRoleReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleReqNet::InternalSwap(CreateRoleReqNet* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(jobid_, other->jobid_);
  swap(sex_, other->sex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoleRspNet::InitAsDefaultInstance() {
  ::protocol::_CreateRoleRspNet_default_instance_._instance.get_mutable()->role_ = const_cast< ::protocol::RoleBaseInfo*>(
      ::protocol::RoleBaseInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleRspNet::kRetFieldNumber;
const int CreateRoleRspNet::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleRspNet::CreateRoleRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsCreateRoleRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CreateRoleRspNet)
}
CreateRoleRspNet::CreateRoleRspNet(const CreateRoleRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role()) {
    role_ = new ::protocol::RoleBaseInfo(*from.role_);
  } else {
    role_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:protocol.CreateRoleRspNet)
}

void CreateRoleRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&role_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&role_)) + sizeof(ret_));
}

CreateRoleRspNet::~CreateRoleRspNet() {
  // @@protoc_insertion_point(destructor:protocol.CreateRoleRspNet)
  SharedDtor();
}

void CreateRoleRspNet::SharedDtor() {
  if (this != internal_default_instance()) delete role_;
}

void CreateRoleRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleRspNet& CreateRoleRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsCreateRoleRspNet();
  return *internal_default_instance();
}

CreateRoleRspNet* CreateRoleRspNet::New(::google::protobuf::Arena* arena) const {
  CreateRoleRspNet* n = new CreateRoleRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CreateRoleRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(role_ != NULL);
    role_->Clear();
  }
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoleRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CreateRoleRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .protocol.RoleBaseInfo role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CreateRoleRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CreateRoleRspNet)
  return false;
#undef DO_
}

void CreateRoleRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CreateRoleRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // required .protocol.RoleBaseInfo role = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->role_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.CreateRoleRspNet)
}

::google::protobuf::uint8* CreateRoleRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CreateRoleRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // required .protocol.RoleBaseInfo role = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->role_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.CreateRoleRspNet)
  return target;
}

size_t CreateRoleRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.CreateRoleRspNet)
  size_t total_size = 0;

  if (has_role()) {
    // required .protocol.RoleBaseInfo role = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->role_);
  }

  if (has_ret()) {
    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  return total_size;
}
size_t CreateRoleRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CreateRoleRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .protocol.RoleBaseInfo role = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->role_);

    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CreateRoleRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CreateRoleRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CreateRoleRspNet)
    MergeFrom(*source);
  }
}

void CreateRoleRspNet::MergeFrom(const CreateRoleRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CreateRoleRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_role()->::protocol::RoleBaseInfo::MergeFrom(from.role());
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateRoleRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CreateRoleRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRspNet::CopyFrom(const CreateRoleRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CreateRoleRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_role()) {
    if (!this->role_->IsInitialized()) return false;
  }
  return true;
}

void CreateRoleRspNet::Swap(CreateRoleRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleRspNet::InternalSwap(CreateRoleRspNet* other) {
  using std::swap;
  swap(role_, other->role_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterSceneReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReqNet::kRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReqNet::EnterSceneReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEnterSceneReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EnterSceneReqNet)
}
EnterSceneReqNet::EnterSceneReqNet(const EnterSceneReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:protocol.EnterSceneReqNet)
}

void EnterSceneReqNet::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
}

EnterSceneReqNet::~EnterSceneReqNet() {
  // @@protoc_insertion_point(destructor:protocol.EnterSceneReqNet)
  SharedDtor();
}

void EnterSceneReqNet::SharedDtor() {
}

void EnterSceneReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneReqNet& EnterSceneReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEnterSceneReqNet();
  return *internal_default_instance();
}

EnterSceneReqNet* EnterSceneReqNet::New(::google::protobuf::Arena* arena) const {
  EnterSceneReqNet* n = new EnterSceneReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EnterSceneReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterSceneReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EnterSceneReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EnterSceneReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EnterSceneReqNet)
  return false;
#undef DO_
}

void EnterSceneReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EnterSceneReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EnterSceneReqNet)
}

::google::protobuf::uint8* EnterSceneReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EnterSceneReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EnterSceneReqNet)
  return target;
}

size_t EnterSceneReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EnterSceneReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 roleId = 1;
  if (has_roleid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EnterSceneReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EnterSceneReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EnterSceneReqNet)
    MergeFrom(*source);
  }
}

void EnterSceneReqNet::MergeFrom(const EnterSceneReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EnterSceneReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roleid()) {
    set_roleid(from.roleid());
  }
}

void EnterSceneReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EnterSceneReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReqNet::CopyFrom(const EnterSceneReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EnterSceneReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void EnterSceneReqNet::Swap(EnterSceneReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReqNet::InternalSwap(EnterSceneReqNet* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterSceneRspNet::InitAsDefaultInstance() {
  ::protocol::_EnterSceneRspNet_default_instance_._instance.get_mutable()->roleinfo_ = const_cast< ::protocol::RoleInfo*>(
      ::protocol::RoleInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneRspNet::kRetFieldNumber;
const int EnterSceneRspNet::kRoleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneRspNet::EnterSceneRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEnterSceneRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EnterSceneRspNet)
}
EnterSceneRspNet::EnterSceneRspNet(const EnterSceneRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roleinfo()) {
    roleinfo_ = new ::protocol::RoleInfo(*from.roleinfo_);
  } else {
    roleinfo_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:protocol.EnterSceneRspNet)
}

void EnterSceneRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&roleinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&roleinfo_)) + sizeof(ret_));
}

EnterSceneRspNet::~EnterSceneRspNet() {
  // @@protoc_insertion_point(destructor:protocol.EnterSceneRspNet)
  SharedDtor();
}

void EnterSceneRspNet::SharedDtor() {
  if (this != internal_default_instance()) delete roleinfo_;
}

void EnterSceneRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneRspNet& EnterSceneRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEnterSceneRspNet();
  return *internal_default_instance();
}

EnterSceneRspNet* EnterSceneRspNet::New(::google::protobuf::Arena* arena) const {
  EnterSceneRspNet* n = new EnterSceneRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EnterSceneRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(roleinfo_ != NULL);
    roleinfo_->Clear();
  }
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterSceneRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EnterSceneRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protocol.RoleInfo roleInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roleinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EnterSceneRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EnterSceneRspNet)
  return false;
#undef DO_
}

void EnterSceneRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EnterSceneRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .protocol.RoleInfo roleInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->roleinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EnterSceneRspNet)
}

::google::protobuf::uint8* EnterSceneRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EnterSceneRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .protocol.RoleInfo roleInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->roleinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EnterSceneRspNet)
  return target;
}

size_t EnterSceneRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EnterSceneRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional .protocol.RoleInfo roleInfo = 2;
  if (has_roleinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roleinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EnterSceneRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EnterSceneRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EnterSceneRspNet)
    MergeFrom(*source);
  }
}

void EnterSceneRspNet::MergeFrom(const EnterSceneRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EnterSceneRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_roleinfo()->::protocol::RoleInfo::MergeFrom(from.roleinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterSceneRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EnterSceneRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneRspNet::CopyFrom(const EnterSceneRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EnterSceneRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_roleinfo()) {
    if (!this->roleinfo_->IsInitialized()) return false;
  }
  return true;
}

void EnterSceneRspNet::Swap(EnterSceneRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneRspNet::InternalSwap(EnterSceneRspNet* other) {
  using std::swap;
  swap(roleinfo_, other->roleinfo_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BagNotifyNet::InitAsDefaultInstance() {
  ::protocol::_BagNotifyNet_default_instance_._instance.get_mutable()->bag_ = const_cast< ::protocol::ItemBag*>(
      ::protocol::ItemBag::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagNotifyNet::kBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagNotifyNet::BagNotifyNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBagNotifyNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BagNotifyNet)
}
BagNotifyNet::BagNotifyNet(const BagNotifyNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bag()) {
    bag_ = new ::protocol::ItemBag(*from.bag_);
  } else {
    bag_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.BagNotifyNet)
}

void BagNotifyNet::SharedCtor() {
  _cached_size_ = 0;
  bag_ = NULL;
}

BagNotifyNet::~BagNotifyNet() {
  // @@protoc_insertion_point(destructor:protocol.BagNotifyNet)
  SharedDtor();
}

void BagNotifyNet::SharedDtor() {
  if (this != internal_default_instance()) delete bag_;
}

void BagNotifyNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagNotifyNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagNotifyNet& BagNotifyNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBagNotifyNet();
  return *internal_default_instance();
}

BagNotifyNet* BagNotifyNet::New(::google::protobuf::Arena* arena) const {
  BagNotifyNet* n = new BagNotifyNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagNotifyNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(bag_ != NULL);
    bag_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagNotifyNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BagNotifyNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.ItemBag bag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BagNotifyNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BagNotifyNet)
  return false;
#undef DO_
}

void BagNotifyNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemBag bag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bag_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BagNotifyNet)
}

::google::protobuf::uint8* BagNotifyNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.ItemBag bag = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->bag_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BagNotifyNet)
  return target;
}

size_t BagNotifyNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BagNotifyNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.ItemBag bag = 1;
  if (has_bag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bag_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagNotifyNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BagNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  const BagNotifyNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagNotifyNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BagNotifyNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BagNotifyNet)
    MergeFrom(*source);
  }
}

void BagNotifyNet::MergeFrom(const BagNotifyNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BagNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bag()) {
    mutable_bag()->::protocol::ItemBag::MergeFrom(from.bag());
  }
}

void BagNotifyNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BagNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagNotifyNet::CopyFrom(const BagNotifyNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BagNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagNotifyNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_bag()) {
    if (!this->bag_->IsInitialized()) return false;
  }
  return true;
}

void BagNotifyNet::Swap(BagNotifyNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagNotifyNet::InternalSwap(BagNotifyNet* other) {
  using std::swap;
  swap(bag_, other->bag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagNotifyNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipBagNotifyNet::InitAsDefaultInstance() {
  ::protocol::_EquipBagNotifyNet_default_instance_._instance.get_mutable()->bag_ = const_cast< ::protocol::EquipBag*>(
      ::protocol::EquipBag::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipBagNotifyNet::kBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipBagNotifyNet::EquipBagNotifyNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBagNotifyNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipBagNotifyNet)
}
EquipBagNotifyNet::EquipBagNotifyNet(const EquipBagNotifyNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bag()) {
    bag_ = new ::protocol::EquipBag(*from.bag_);
  } else {
    bag_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.EquipBagNotifyNet)
}

void EquipBagNotifyNet::SharedCtor() {
  _cached_size_ = 0;
  bag_ = NULL;
}

EquipBagNotifyNet::~EquipBagNotifyNet() {
  // @@protoc_insertion_point(destructor:protocol.EquipBagNotifyNet)
  SharedDtor();
}

void EquipBagNotifyNet::SharedDtor() {
  if (this != internal_default_instance()) delete bag_;
}

void EquipBagNotifyNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipBagNotifyNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipBagNotifyNet& EquipBagNotifyNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipBagNotifyNet();
  return *internal_default_instance();
}

EquipBagNotifyNet* EquipBagNotifyNet::New(::google::protobuf::Arena* arena) const {
  EquipBagNotifyNet* n = new EquipBagNotifyNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipBagNotifyNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipBagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(bag_ != NULL);
    bag_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipBagNotifyNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipBagNotifyNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.EquipBag bag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipBagNotifyNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipBagNotifyNet)
  return false;
#undef DO_
}

void EquipBagNotifyNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipBagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipBag bag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bag_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipBagNotifyNet)
}

::google::protobuf::uint8* EquipBagNotifyNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipBagNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .protocol.EquipBag bag = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->bag_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipBagNotifyNet)
  return target;
}

size_t EquipBagNotifyNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipBagNotifyNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .protocol.EquipBag bag = 1;
  if (has_bag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bag_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipBagNotifyNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipBagNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipBagNotifyNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipBagNotifyNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipBagNotifyNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipBagNotifyNet)
    MergeFrom(*source);
  }
}

void EquipBagNotifyNet::MergeFrom(const EquipBagNotifyNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipBagNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bag()) {
    mutable_bag()->::protocol::EquipBag::MergeFrom(from.bag());
  }
}

void EquipBagNotifyNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipBagNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipBagNotifyNet::CopyFrom(const EquipBagNotifyNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipBagNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipBagNotifyNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_bag()) {
    if (!this->bag_->IsInitialized()) return false;
  }
  return true;
}

void EquipBagNotifyNet::Swap(EquipBagNotifyNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipBagNotifyNet::InternalSwap(EquipBagNotifyNet* other) {
  using std::swap;
  swap(bag_, other->bag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipBagNotifyNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorNotifyNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorNotifyNet::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorNotifyNet::ErrorNotifyNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsErrorNotifyNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ErrorNotifyNet)
}
ErrorNotifyNet::ErrorNotifyNet(const ErrorNotifyNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:protocol.ErrorNotifyNet)
}

void ErrorNotifyNet::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
}

ErrorNotifyNet::~ErrorNotifyNet() {
  // @@protoc_insertion_point(destructor:protocol.ErrorNotifyNet)
  SharedDtor();
}

void ErrorNotifyNet::SharedDtor() {
}

void ErrorNotifyNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorNotifyNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorNotifyNet& ErrorNotifyNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsErrorNotifyNet();
  return *internal_default_instance();
}

ErrorNotifyNet* ErrorNotifyNet::New(::google::protobuf::Arena* arena) const {
  ErrorNotifyNet* n = new ErrorNotifyNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorNotifyNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ErrorNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorNotifyNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ErrorNotifyNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_err();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ErrorNotifyNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ErrorNotifyNet)
  return false;
#undef DO_
}

void ErrorNotifyNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ErrorNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ErrorNotifyNet)
}

::google::protobuf::uint8* ErrorNotifyNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ErrorNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 err = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ErrorNotifyNet)
  return target;
}

size_t ErrorNotifyNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ErrorNotifyNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorNotifyNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ErrorNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorNotifyNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorNotifyNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ErrorNotifyNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ErrorNotifyNet)
    MergeFrom(*source);
  }
}

void ErrorNotifyNet::MergeFrom(const ErrorNotifyNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ErrorNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err()) {
    set_err(from.err());
  }
}

void ErrorNotifyNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ErrorNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorNotifyNet::CopyFrom(const ErrorNotifyNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ErrorNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorNotifyNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ErrorNotifyNet::Swap(ErrorNotifyNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorNotifyNet::InternalSwap(ErrorNotifyNet* other) {
  using std::swap;
  swap(err_, other->err_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorNotifyNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdLoginReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdLoginReqNet::kIdFieldNumber;
const int UpdLoginReqNet::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdLoginReqNet::UpdLoginReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdLoginReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdLoginReqNet)
}
UpdLoginReqNet::UpdLoginReqNet(const UpdLoginReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:protocol.UpdLoginReqNet)
}

void UpdLoginReqNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(id_));
}

UpdLoginReqNet::~UpdLoginReqNet() {
  // @@protoc_insertion_point(destructor:protocol.UpdLoginReqNet)
  SharedDtor();
}

void UpdLoginReqNet::SharedDtor() {
}

void UpdLoginReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdLoginReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdLoginReqNet& UpdLoginReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdLoginReqNet();
  return *internal_default_instance();
}

UpdLoginReqNet* UpdLoginReqNet::New(::google::protobuf::Arena* arena) const {
  UpdLoginReqNet* n = new UpdLoginReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdLoginReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdLoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdLoginReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdLoginReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 playerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdLoginReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdLoginReqNet)
  return false;
#undef DO_
}

void UpdLoginReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdLoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int64 playerId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdLoginReqNet)
}

::google::protobuf::uint8* UpdLoginReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdLoginReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int64 playerId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdLoginReqNet)
  return target;
}

size_t UpdLoginReqNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.UpdLoginReqNet)
  size_t total_size = 0;

  if (has_playerid()) {
    // required int64 playerId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t UpdLoginReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdLoginReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 playerId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdLoginReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdLoginReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdLoginReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdLoginReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdLoginReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdLoginReqNet)
    MergeFrom(*source);
  }
}

void UpdLoginReqNet::MergeFrom(const UpdLoginReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdLoginReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdLoginReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdLoginReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdLoginReqNet::CopyFrom(const UpdLoginReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdLoginReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdLoginReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UpdLoginReqNet::Swap(UpdLoginReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdLoginReqNet::InternalSwap(UpdLoginReqNet* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdLoginReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdLoginRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdLoginRspNet::kKcpIdFieldNumber;
const int UpdLoginRspNet::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdLoginRspNet::UpdLoginRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdLoginRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdLoginRspNet)
}
UpdLoginRspNet::UpdLoginRspNet(const UpdLoginRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kcpid_, &from.kcpid_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&kcpid_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:protocol.UpdLoginRspNet)
}

void UpdLoginRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&kcpid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&kcpid_)) + sizeof(id_));
}

UpdLoginRspNet::~UpdLoginRspNet() {
  // @@protoc_insertion_point(destructor:protocol.UpdLoginRspNet)
  SharedDtor();
}

void UpdLoginRspNet::SharedDtor() {
}

void UpdLoginRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdLoginRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdLoginRspNet& UpdLoginRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdLoginRspNet();
  return *internal_default_instance();
}

UpdLoginRspNet* UpdLoginRspNet::New(::google::protobuf::Arena* arena) const {
  UpdLoginRspNet* n = new UpdLoginRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdLoginRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdLoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&kcpid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&kcpid_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdLoginRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdLoginRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 kcpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_kcpid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kcpid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdLoginRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdLoginRspNet)
  return false;
#undef DO_
}

void UpdLoginRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdLoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 kcpId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kcpid(), output);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdLoginRspNet)
}

::google::protobuf::uint8* UpdLoginRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdLoginRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 kcpId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kcpid(), target);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdLoginRspNet)
  return target;
}

size_t UpdLoginRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.UpdLoginRspNet)
  size_t total_size = 0;

  if (has_kcpid()) {
    // required int32 kcpId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kcpid());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t UpdLoginRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdLoginRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 kcpId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kcpid());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdLoginRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdLoginRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdLoginRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdLoginRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdLoginRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdLoginRspNet)
    MergeFrom(*source);
  }
}

void UpdLoginRspNet::MergeFrom(const UpdLoginRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdLoginRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      kcpid_ = from.kcpid_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdLoginRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdLoginRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdLoginRspNet::CopyFrom(const UpdLoginRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdLoginRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdLoginRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UpdLoginRspNet::Swap(UpdLoginRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdLoginRspNet::InternalSwap(UpdLoginRspNet* other) {
  using std::swap;
  swap(kcpid_, other->kcpid_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdLoginRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdTestReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdTestReqNet::kDataIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdTestReqNet::UpdTestReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdTestReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdTestReqNet)
}
UpdTestReqNet::UpdTestReqNet(const UpdTestReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataid_ = from.dataid_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdTestReqNet)
}

void UpdTestReqNet::SharedCtor() {
  _cached_size_ = 0;
  dataid_ = 0;
}

UpdTestReqNet::~UpdTestReqNet() {
  // @@protoc_insertion_point(destructor:protocol.UpdTestReqNet)
  SharedDtor();
}

void UpdTestReqNet::SharedDtor() {
}

void UpdTestReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdTestReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdTestReqNet& UpdTestReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdTestReqNet();
  return *internal_default_instance();
}

UpdTestReqNet* UpdTestReqNet::New(::google::protobuf::Arena* arena) const {
  UpdTestReqNet* n = new UpdTestReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdTestReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdTestReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdTestReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdTestReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dataId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dataid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdTestReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdTestReqNet)
  return false;
#undef DO_
}

void UpdTestReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdTestReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dataId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dataid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdTestReqNet)
}

::google::protobuf::uint8* UpdTestReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdTestReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dataId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dataid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdTestReqNet)
  return target;
}

size_t UpdTestReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdTestReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 dataId = 1;
  if (has_dataid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dataid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdTestReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdTestReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdTestReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdTestReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdTestReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdTestReqNet)
    MergeFrom(*source);
  }
}

void UpdTestReqNet::MergeFrom(const UpdTestReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdTestReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dataid()) {
    set_dataid(from.dataid());
  }
}

void UpdTestReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdTestReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdTestReqNet::CopyFrom(const UpdTestReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdTestReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdTestReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UpdTestReqNet::Swap(UpdTestReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdTestReqNet::InternalSwap(UpdTestReqNet* other) {
  using std::swap;
  swap(dataid_, other->dataid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdTestReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdTestRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdTestRspNet::kDataIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdTestRspNet::UpdTestRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdTestRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.UpdTestRspNet)
}
UpdTestRspNet::UpdTestRspNet(const UpdTestRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataid_ = from.dataid_;
  // @@protoc_insertion_point(copy_constructor:protocol.UpdTestRspNet)
}

void UpdTestRspNet::SharedCtor() {
  _cached_size_ = 0;
  dataid_ = 0;
}

UpdTestRspNet::~UpdTestRspNet() {
  // @@protoc_insertion_point(destructor:protocol.UpdTestRspNet)
  SharedDtor();
}

void UpdTestRspNet::SharedDtor() {
}

void UpdTestRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdTestRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdTestRspNet& UpdTestRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsUpdTestRspNet();
  return *internal_default_instance();
}

UpdTestRspNet* UpdTestRspNet::New(::google::protobuf::Arena* arena) const {
  UpdTestRspNet* n = new UpdTestRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdTestRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.UpdTestRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdTestRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.UpdTestRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dataId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dataid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.UpdTestRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.UpdTestRspNet)
  return false;
#undef DO_
}

void UpdTestRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.UpdTestRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dataId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dataid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.UpdTestRspNet)
}

::google::protobuf::uint8* UpdTestRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.UpdTestRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dataId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dataid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.UpdTestRspNet)
  return target;
}

size_t UpdTestRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.UpdTestRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 dataId = 1;
  if (has_dataid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dataid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdTestRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.UpdTestRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdTestRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdTestRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.UpdTestRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.UpdTestRspNet)
    MergeFrom(*source);
  }
}

void UpdTestRspNet::MergeFrom(const UpdTestRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.UpdTestRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dataid()) {
    set_dataid(from.dataid());
  }
}

void UpdTestRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.UpdTestRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdTestRspNet::CopyFrom(const UpdTestRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.UpdTestRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdTestRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UpdTestRspNet::Swap(UpdTestRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdTestRspNet::InternalSwap(UpdTestRspNet* other) {
  using std::swap;
  swap(dataid_, other->dataid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdTestRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuyRoleSoltReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyRoleSoltReqNet::BuyRoleSoltReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyRoleSoltReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BuyRoleSoltReqNet)
}
BuyRoleSoltReqNet::BuyRoleSoltReqNet(const BuyRoleSoltReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.BuyRoleSoltReqNet)
}

void BuyRoleSoltReqNet::SharedCtor() {
  _cached_size_ = 0;
}

BuyRoleSoltReqNet::~BuyRoleSoltReqNet() {
  // @@protoc_insertion_point(destructor:protocol.BuyRoleSoltReqNet)
  SharedDtor();
}

void BuyRoleSoltReqNet::SharedDtor() {
}

void BuyRoleSoltReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyRoleSoltReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuyRoleSoltReqNet& BuyRoleSoltReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyRoleSoltReqNet();
  return *internal_default_instance();
}

BuyRoleSoltReqNet* BuyRoleSoltReqNet::New(::google::protobuf::Arena* arena) const {
  BuyRoleSoltReqNet* n = new BuyRoleSoltReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuyRoleSoltReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BuyRoleSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BuyRoleSoltReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BuyRoleSoltReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BuyRoleSoltReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BuyRoleSoltReqNet)
  return false;
#undef DO_
}

void BuyRoleSoltReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BuyRoleSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BuyRoleSoltReqNet)
}

::google::protobuf::uint8* BuyRoleSoltReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BuyRoleSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BuyRoleSoltReqNet)
  return target;
}

size_t BuyRoleSoltReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BuyRoleSoltReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyRoleSoltReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BuyRoleSoltReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyRoleSoltReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyRoleSoltReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BuyRoleSoltReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BuyRoleSoltReqNet)
    MergeFrom(*source);
  }
}

void BuyRoleSoltReqNet::MergeFrom(const BuyRoleSoltReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BuyRoleSoltReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BuyRoleSoltReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BuyRoleSoltReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyRoleSoltReqNet::CopyFrom(const BuyRoleSoltReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BuyRoleSoltReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyRoleSoltReqNet::IsInitialized() const {
  return true;
}

void BuyRoleSoltReqNet::Swap(BuyRoleSoltReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyRoleSoltReqNet::InternalSwap(BuyRoleSoltReqNet* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuyRoleSoltReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuyRoleSoltRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuyRoleSoltRspNet::kSoltCountFieldNumber;
const int BuyRoleSoltRspNet::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyRoleSoltRspNet::BuyRoleSoltRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyRoleSoltRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BuyRoleSoltRspNet)
}
BuyRoleSoltRspNet::BuyRoleSoltRspNet(const BuyRoleSoltRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&soltcount_, &from.soltcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&soltcount_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:protocol.BuyRoleSoltRspNet)
}

void BuyRoleSoltRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&soltcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&soltcount_)) + sizeof(ret_));
}

BuyRoleSoltRspNet::~BuyRoleSoltRspNet() {
  // @@protoc_insertion_point(destructor:protocol.BuyRoleSoltRspNet)
  SharedDtor();
}

void BuyRoleSoltRspNet::SharedDtor() {
}

void BuyRoleSoltRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyRoleSoltRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuyRoleSoltRspNet& BuyRoleSoltRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyRoleSoltRspNet();
  return *internal_default_instance();
}

BuyRoleSoltRspNet* BuyRoleSoltRspNet::New(::google::protobuf::Arena* arena) const {
  BuyRoleSoltRspNet* n = new BuyRoleSoltRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuyRoleSoltRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BuyRoleSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&soltcount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ret_) -
        reinterpret_cast<char*>(&soltcount_)) + sizeof(ret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BuyRoleSoltRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BuyRoleSoltRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 soltCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_soltcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soltcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BuyRoleSoltRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BuyRoleSoltRspNet)
  return false;
#undef DO_
}

void BuyRoleSoltRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BuyRoleSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 soltCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soltcount(), output);
  }

  // required int32 ret = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BuyRoleSoltRspNet)
}

::google::protobuf::uint8* BuyRoleSoltRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BuyRoleSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 soltCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soltcount(), target);
  }

  // required int32 ret = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BuyRoleSoltRspNet)
  return target;
}

size_t BuyRoleSoltRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.BuyRoleSoltRspNet)
  size_t total_size = 0;

  if (has_soltcount()) {
    // required int32 soltCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soltcount());
  }

  if (has_ret()) {
    // required int32 ret = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  return total_size;
}
size_t BuyRoleSoltRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BuyRoleSoltRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 soltCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soltcount());

    // required int32 ret = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyRoleSoltRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BuyRoleSoltRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyRoleSoltRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyRoleSoltRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BuyRoleSoltRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BuyRoleSoltRspNet)
    MergeFrom(*source);
  }
}

void BuyRoleSoltRspNet::MergeFrom(const BuyRoleSoltRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BuyRoleSoltRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      soltcount_ = from.soltcount_;
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BuyRoleSoltRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BuyRoleSoltRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyRoleSoltRspNet::CopyFrom(const BuyRoleSoltRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BuyRoleSoltRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyRoleSoltRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BuyRoleSoltRspNet::Swap(BuyRoleSoltRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyRoleSoltRspNet::InternalSwap(BuyRoleSoltRspNet* other) {
  using std::swap;
  swap(soltcount_, other->soltcount_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuyRoleSoltRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMCMDReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMCMDReqNet::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMCMDReqNet::GMCMDReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsGMCMDReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GMCMDReqNet)
}
GMCMDReqNet::GMCMDReqNet(const GMCMDReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd()) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.GMCMDReqNet)
}

void GMCMDReqNet::SharedCtor() {
  _cached_size_ = 0;
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GMCMDReqNet::~GMCMDReqNet() {
  // @@protoc_insertion_point(destructor:protocol.GMCMDReqNet)
  SharedDtor();
}

void GMCMDReqNet::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GMCMDReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMCMDReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMCMDReqNet& GMCMDReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsGMCMDReqNet();
  return *internal_default_instance();
}

GMCMDReqNet* GMCMDReqNet::New(::google::protobuf::Arena* arena) const {
  GMCMDReqNet* n = new GMCMDReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GMCMDReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GMCMDReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!cmd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*cmd_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMCMDReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GMCMDReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.GMCMDReqNet.cmd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GMCMDReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GMCMDReqNet)
  return false;
#undef DO_
}

void GMCMDReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GMCMDReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.GMCMDReqNet.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GMCMDReqNet)
}

::google::protobuf::uint8* GMCMDReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GMCMDReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.GMCMDReqNet.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GMCMDReqNet)
  return target;
}

size_t GMCMDReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GMCMDReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMCMDReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GMCMDReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const GMCMDReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMCMDReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GMCMDReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GMCMDReqNet)
    MergeFrom(*source);
  }
}

void GMCMDReqNet::MergeFrom(const GMCMDReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GMCMDReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cmd()) {
    set_has_cmd();
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
}

void GMCMDReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GMCMDReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMCMDReqNet::CopyFrom(const GMCMDReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GMCMDReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMCMDReqNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GMCMDReqNet::Swap(GMCMDReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMCMDReqNet::InternalSwap(GMCMDReqNet* other) {
  using std::swap;
  cmd_.Swap(&other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMCMDReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMCMDRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMCMDRspNet::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMCMDRspNet::GMCMDRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsGMCMDRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.GMCMDRspNet)
}
GMCMDRspNet::GMCMDRspNet(const GMCMDRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ret()) {
    ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.GMCMDRspNet)
}

void GMCMDRspNet::SharedCtor() {
  _cached_size_ = 0;
  ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GMCMDRspNet::~GMCMDRspNet() {
  // @@protoc_insertion_point(destructor:protocol.GMCMDRspNet)
  SharedDtor();
}

void GMCMDRspNet::SharedDtor() {
  ret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GMCMDRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMCMDRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMCMDRspNet& GMCMDRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsGMCMDRspNet();
  return *internal_default_instance();
}

GMCMDRspNet* GMCMDRspNet::New(::google::protobuf::Arena* arena) const {
  GMCMDRspNet* n = new GMCMDRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GMCMDRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.GMCMDRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!ret_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ret_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMCMDRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.GMCMDRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ret()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ret().data(), static_cast<int>(this->ret().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.GMCMDRspNet.ret");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.GMCMDRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.GMCMDRspNet)
  return false;
#undef DO_
}

void GMCMDRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.GMCMDRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret().data(), static_cast<int>(this->ret().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.GMCMDRspNet.ret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.GMCMDRspNet)
}

::google::protobuf::uint8* GMCMDRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.GMCMDRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret().data(), static_cast<int>(this->ret().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.GMCMDRspNet.ret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.GMCMDRspNet)
  return target;
}

size_t GMCMDRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.GMCMDRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ret());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMCMDRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.GMCMDRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const GMCMDRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMCMDRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.GMCMDRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.GMCMDRspNet)
    MergeFrom(*source);
  }
}

void GMCMDRspNet::MergeFrom(const GMCMDRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.GMCMDRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ret()) {
    set_has_ret();
    ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_);
  }
}

void GMCMDRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.GMCMDRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMCMDRspNet::CopyFrom(const GMCMDRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.GMCMDRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMCMDRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GMCMDRspNet::Swap(GMCMDRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMCMDRspNet::InternalSwap(GMCMDRspNet* other) {
  using std::swap;
  ret_.Swap(&other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMCMDRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemChangeNotifyNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemChangeNotifyNet::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemChangeNotifyNet::ItemChangeNotifyNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemChangeNotifyNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ItemChangeNotifyNet)
}
ItemChangeNotifyNet::ItemChangeNotifyNet(const ItemChangeNotifyNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.ItemChangeNotifyNet)
}

void ItemChangeNotifyNet::SharedCtor() {
  _cached_size_ = 0;
}

ItemChangeNotifyNet::~ItemChangeNotifyNet() {
  // @@protoc_insertion_point(destructor:protocol.ItemChangeNotifyNet)
  SharedDtor();
}

void ItemChangeNotifyNet::SharedDtor() {
}

void ItemChangeNotifyNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemChangeNotifyNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemChangeNotifyNet& ItemChangeNotifyNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsItemChangeNotifyNet();
  return *internal_default_instance();
}

ItemChangeNotifyNet* ItemChangeNotifyNet::New(::google::protobuf::Arena* arena) const {
  ItemChangeNotifyNet* n = new ItemChangeNotifyNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemChangeNotifyNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ItemChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemChangeNotifyNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ItemChangeNotifyNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.ItemChangeInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ItemChangeNotifyNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ItemChangeNotifyNet)
  return false;
#undef DO_
}

void ItemChangeNotifyNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ItemChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ItemChangeInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ItemChangeNotifyNet)
}

::google::protobuf::uint8* ItemChangeNotifyNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ItemChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.ItemChangeInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ItemChangeNotifyNet)
  return target;
}

size_t ItemChangeNotifyNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ItemChangeNotifyNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .protocol.ItemChangeInfo infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemChangeNotifyNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ItemChangeNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemChangeNotifyNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemChangeNotifyNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ItemChangeNotifyNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ItemChangeNotifyNet)
    MergeFrom(*source);
  }
}

void ItemChangeNotifyNet::MergeFrom(const ItemChangeNotifyNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ItemChangeNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void ItemChangeNotifyNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ItemChangeNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemChangeNotifyNet::CopyFrom(const ItemChangeNotifyNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ItemChangeNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemChangeNotifyNet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->infos())) return false;
  return true;
}

void ItemChangeNotifyNet::Swap(ItemChangeNotifyNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemChangeNotifyNet::InternalSwap(ItemChangeNotifyNet* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemChangeNotifyNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquipChangeNotifyNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipChangeNotifyNet::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipChangeNotifyNet::EquipChangeNotifyNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipChangeNotifyNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.EquipChangeNotifyNet)
}
EquipChangeNotifyNet::EquipChangeNotifyNet(const EquipChangeNotifyNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.EquipChangeNotifyNet)
}

void EquipChangeNotifyNet::SharedCtor() {
  _cached_size_ = 0;
}

EquipChangeNotifyNet::~EquipChangeNotifyNet() {
  // @@protoc_insertion_point(destructor:protocol.EquipChangeNotifyNet)
  SharedDtor();
}

void EquipChangeNotifyNet::SharedDtor() {
}

void EquipChangeNotifyNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipChangeNotifyNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipChangeNotifyNet& EquipChangeNotifyNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsEquipChangeNotifyNet();
  return *internal_default_instance();
}

EquipChangeNotifyNet* EquipChangeNotifyNet::New(::google::protobuf::Arena* arena) const {
  EquipChangeNotifyNet* n = new EquipChangeNotifyNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipChangeNotifyNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.EquipChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipChangeNotifyNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.EquipChangeNotifyNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.EquipChangeInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.EquipChangeNotifyNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.EquipChangeNotifyNet)
  return false;
#undef DO_
}

void EquipChangeNotifyNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.EquipChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.EquipChangeInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.EquipChangeNotifyNet)
}

::google::protobuf::uint8* EquipChangeNotifyNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.EquipChangeNotifyNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protocol.EquipChangeInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.EquipChangeNotifyNet)
  return target;
}

size_t EquipChangeNotifyNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.EquipChangeNotifyNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .protocol.EquipChangeInfo infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipChangeNotifyNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.EquipChangeNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipChangeNotifyNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipChangeNotifyNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.EquipChangeNotifyNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.EquipChangeNotifyNet)
    MergeFrom(*source);
  }
}

void EquipChangeNotifyNet::MergeFrom(const EquipChangeNotifyNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.EquipChangeNotifyNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void EquipChangeNotifyNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.EquipChangeNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipChangeNotifyNet::CopyFrom(const EquipChangeNotifyNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.EquipChangeNotifyNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipChangeNotifyNet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->infos())) return false;
  return true;
}

void EquipChangeNotifyNet::Swap(EquipChangeNotifyNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipChangeNotifyNet::InternalSwap(EquipChangeNotifyNet* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipChangeNotifyNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuyBagSoltReqNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyBagSoltReqNet::BuyBagSoltReqNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyBagSoltReqNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BuyBagSoltReqNet)
}
BuyBagSoltReqNet::BuyBagSoltReqNet(const BuyBagSoltReqNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protocol.BuyBagSoltReqNet)
}

void BuyBagSoltReqNet::SharedCtor() {
  _cached_size_ = 0;
}

BuyBagSoltReqNet::~BuyBagSoltReqNet() {
  // @@protoc_insertion_point(destructor:protocol.BuyBagSoltReqNet)
  SharedDtor();
}

void BuyBagSoltReqNet::SharedDtor() {
}

void BuyBagSoltReqNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyBagSoltReqNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuyBagSoltReqNet& BuyBagSoltReqNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyBagSoltReqNet();
  return *internal_default_instance();
}

BuyBagSoltReqNet* BuyBagSoltReqNet::New(::google::protobuf::Arena* arena) const {
  BuyBagSoltReqNet* n = new BuyBagSoltReqNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuyBagSoltReqNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BuyBagSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BuyBagSoltReqNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BuyBagSoltReqNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BuyBagSoltReqNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BuyBagSoltReqNet)
  return false;
#undef DO_
}

void BuyBagSoltReqNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BuyBagSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BuyBagSoltReqNet)
}

::google::protobuf::uint8* BuyBagSoltReqNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BuyBagSoltReqNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BuyBagSoltReqNet)
  return target;
}

size_t BuyBagSoltReqNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BuyBagSoltReqNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyBagSoltReqNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BuyBagSoltReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyBagSoltReqNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyBagSoltReqNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BuyBagSoltReqNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BuyBagSoltReqNet)
    MergeFrom(*source);
  }
}

void BuyBagSoltReqNet::MergeFrom(const BuyBagSoltReqNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BuyBagSoltReqNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BuyBagSoltReqNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BuyBagSoltReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyBagSoltReqNet::CopyFrom(const BuyBagSoltReqNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BuyBagSoltReqNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBagSoltReqNet::IsInitialized() const {
  return true;
}

void BuyBagSoltReqNet::Swap(BuyBagSoltReqNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyBagSoltReqNet::InternalSwap(BuyBagSoltReqNet* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuyBagSoltReqNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuyBagSoltRspNet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuyBagSoltRspNet::kRetFieldNumber;
const int BuyBagSoltRspNet::kConsumptionsBagFieldNumber;
const int BuyBagSoltRspNet::kMaterialsBagFieldNumber;
const int BuyBagSoltRspNet::kQuestsBagFieldNumber;
const int BuyBagSoltRspNet::kEquipsBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyBagSoltRspNet::BuyBagSoltRspNet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyBagSoltRspNet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.BuyBagSoltRspNet)
}
BuyBagSoltRspNet::BuyBagSoltRspNet(const BuyBagSoltRspNet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&equipsbag_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(equipsbag_));
  // @@protoc_insertion_point(copy_constructor:protocol.BuyBagSoltRspNet)
}

void BuyBagSoltRspNet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equipsbag_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(equipsbag_));
}

BuyBagSoltRspNet::~BuyBagSoltRspNet() {
  // @@protoc_insertion_point(destructor:protocol.BuyBagSoltRspNet)
  SharedDtor();
}

void BuyBagSoltRspNet::SharedDtor() {
}

void BuyBagSoltRspNet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyBagSoltRspNet::descriptor() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuyBagSoltRspNet& BuyBagSoltRspNet::default_instance() {
  ::protobuf_proto_2fmsg_5fnet_2eproto::InitDefaultsBuyBagSoltRspNet();
  return *internal_default_instance();
}

BuyBagSoltRspNet* BuyBagSoltRspNet::New(::google::protobuf::Arena* arena) const {
  BuyBagSoltRspNet* n = new BuyBagSoltRspNet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuyBagSoltRspNet::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.BuyBagSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&ret_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&equipsbag_) -
        reinterpret_cast<char*>(&ret_)) + sizeof(equipsbag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BuyBagSoltRspNet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.BuyBagSoltRspNet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 consumptionsBag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_consumptionsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consumptionsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 materialsBag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_materialsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &materialsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 questsBag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_questsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &questsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 equipsBag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_equipsbag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipsbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.BuyBagSoltRspNet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.BuyBagSoltRspNet)
  return false;
#undef DO_
}

void BuyBagSoltRspNet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.BuyBagSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // required int32 consumptionsBag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->consumptionsbag(), output);
  }

  // required int32 materialsBag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->materialsbag(), output);
  }

  // required int32 questsBag = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->questsbag(), output);
  }

  // required int32 equipsBag = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->equipsbag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.BuyBagSoltRspNet)
}

::google::protobuf::uint8* BuyBagSoltRspNet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.BuyBagSoltRspNet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // required int32 consumptionsBag = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->consumptionsbag(), target);
  }

  // required int32 materialsBag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->materialsbag(), target);
  }

  // required int32 questsBag = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->questsbag(), target);
  }

  // required int32 equipsBag = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->equipsbag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.BuyBagSoltRspNet)
  return target;
}

size_t BuyBagSoltRspNet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.BuyBagSoltRspNet)
  size_t total_size = 0;

  if (has_ret()) {
    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  if (has_consumptionsbag()) {
    // required int32 consumptionsBag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consumptionsbag());
  }

  if (has_materialsbag()) {
    // required int32 materialsBag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->materialsbag());
  }

  if (has_questsbag()) {
    // required int32 questsBag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->questsbag());
  }

  if (has_equipsbag()) {
    // required int32 equipsBag = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipsbag());
  }

  return total_size;
}
size_t BuyBagSoltRspNet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.BuyBagSoltRspNet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

    // required int32 consumptionsBag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consumptionsbag());

    // required int32 materialsBag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->materialsbag());

    // required int32 questsBag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->questsbag());

    // required int32 equipsBag = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipsbag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyBagSoltRspNet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.BuyBagSoltRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyBagSoltRspNet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyBagSoltRspNet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.BuyBagSoltRspNet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.BuyBagSoltRspNet)
    MergeFrom(*source);
  }
}

void BuyBagSoltRspNet::MergeFrom(const BuyBagSoltRspNet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.BuyBagSoltRspNet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      ret_ = from.ret_;
    }
    if (cached_has_bits & 0x00000002u) {
      consumptionsbag_ = from.consumptionsbag_;
    }
    if (cached_has_bits & 0x00000004u) {
      materialsbag_ = from.materialsbag_;
    }
    if (cached_has_bits & 0x00000008u) {
      questsbag_ = from.questsbag_;
    }
    if (cached_has_bits & 0x00000010u) {
      equipsbag_ = from.equipsbag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BuyBagSoltRspNet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.BuyBagSoltRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyBagSoltRspNet::CopyFrom(const BuyBagSoltRspNet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.BuyBagSoltRspNet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyBagSoltRspNet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void BuyBagSoltRspNet::Swap(BuyBagSoltRspNet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyBagSoltRspNet::InternalSwap(BuyBagSoltRspNet* other) {
  using std::swap;
  swap(ret_, other->ret_);
  swap(consumptionsbag_, other->consumptionsbag_);
  swap(materialsbag_, other->materialsbag_);
  swap(questsbag_, other->questsbag_);
  swap(equipsbag_, other->equipsbag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuyBagSoltRspNet::GetMetadata() const {
  protobuf_proto_2fmsg_5fnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fmsg_5fnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol

// @@protoc_insertion_point(global_scope)
